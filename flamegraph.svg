<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="453.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="453.00"> </text><svg id="frames" x="10" width="1180" total_samples="2011"><g><title>ntdll`CsrClientConnectToServer (1 samples, 0.05%)</title><rect x="0.0000%" y="341" width="0.0497%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50"></text></g><g><title>ntdll`RtlWaitOnAddress (1 samples, 0.05%)</title><rect x="0.0000%" y="325" width="0.0497%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="335.50"></text></g><g><title>ntdll`NtCreateWorkerFactory (1 samples, 0.05%)</title><rect x="0.0000%" y="309" width="0.0497%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="319.50"></text></g><g><title>ntdll`RtlCreateHeap (1 samples, 0.05%)</title><rect x="0.0497%" y="325" width="0.0497%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2997%" y="335.50"></text></g><g><title>ntdll`RtlTryAcquirePebLock (1 samples, 0.05%)</title><rect x="0.0497%" y="309" width="0.0497%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.2997%" y="319.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.05%)</title><rect x="0.0497%" y="293" width="0.0497%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.2997%" y="303.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.05%)</title><rect x="0.0497%" y="277" width="0.0497%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.2997%" y="287.50"></text></g><g><title>ntdll`LdrInitShimEngineDynamic (2 samples, 0.10%)</title><rect x="0.0497%" y="341" width="0.0995%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="2"/><text x="0.2997%" y="351.50"></text></g><g><title>ntdll`RtlInitCodePageTable (1 samples, 0.05%)</title><rect x="0.0995%" y="325" width="0.0497%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.3495%" y="335.50"></text></g><g><title>ntdll`NtQueryValueKey (1 samples, 0.05%)</title><rect x="0.0995%" y="309" width="0.0497%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="0.3495%" y="319.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (2 samples, 0.10%)</title><rect x="0.1492%" y="229" width="0.0995%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="2"/><text x="0.3992%" y="239.50"></text></g><g><title>ntdll`LdrGetDllHandleByMapping (3 samples, 0.15%)</title><rect x="0.1492%" y="293" width="0.1492%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="3"/><text x="0.3992%" y="303.50"></text></g><g><title>ntdll`LdrAddRefDll (3 samples, 0.15%)</title><rect x="0.1492%" y="277" width="0.1492%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="3"/><text x="0.3992%" y="287.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (3 samples, 0.15%)</title><rect x="0.1492%" y="261" width="0.1492%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="3"/><text x="0.3992%" y="271.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (3 samples, 0.15%)</title><rect x="0.1492%" y="245" width="0.1492%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="3"/><text x="0.3992%" y="255.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (1 samples, 0.05%)</title><rect x="0.2486%" y="229" width="0.0497%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="1"/><text x="0.4986%" y="239.50"></text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (1 samples, 0.05%)</title><rect x="0.2486%" y="213" width="0.0497%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="1"/><text x="0.4986%" y="223.50"></text></g><g><title>ntdll`LdrAddRefDll (1 samples, 0.05%)</title><rect x="0.2486%" y="197" width="0.0497%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="1"/><text x="0.4986%" y="207.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.05%)</title><rect x="0.2486%" y="181" width="0.0497%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="1"/><text x="0.4986%" y="191.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.05%)</title><rect x="0.2486%" y="165" width="0.0497%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="1"/><text x="0.4986%" y="175.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.05%)</title><rect x="0.2486%" y="149" width="0.0497%" height="15" fill="rgb(249,33,26)" fg:x="5" fg:w="1"/><text x="0.4986%" y="159.50"></text></g><g><title>KernelBase`GetCPHashNode (1 samples, 0.05%)</title><rect x="0.2984%" y="181" width="0.0497%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="1"/><text x="0.5484%" y="191.50"></text></g><g><title>ntdll`CsrClientConnectToServer (1 samples, 0.05%)</title><rect x="0.2984%" y="165" width="0.0497%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="1"/><text x="0.5484%" y="175.50"></text></g><g><title>ntdll`RtlGetNtProductType (1 samples, 0.05%)</title><rect x="0.2984%" y="149" width="0.0497%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="1"/><text x="0.5484%" y="159.50"></text></g><g><title>ntdll`RtlCreateHeap (1 samples, 0.05%)</title><rect x="0.2984%" y="133" width="0.0497%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="1"/><text x="0.5484%" y="143.50"></text></g><g><title>ntdll`RtlMoveMemory (1 samples, 0.05%)</title><rect x="0.2984%" y="117" width="0.0497%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="1"/><text x="0.5484%" y="127.50"></text></g><g><title>KernelBase`GetProcessHeap (1 samples, 0.05%)</title><rect x="0.3481%" y="181" width="0.0497%" height="15" fill="rgb(225,111,53)" fg:x="7" fg:w="1"/><text x="0.5981%" y="191.50"></text></g><g><title>KernelBase`GetCPHashNode (1 samples, 0.05%)</title><rect x="0.3481%" y="165" width="0.0497%" height="15" fill="rgb(238,160,17)" fg:x="7" fg:w="1"/><text x="0.5981%" y="175.50"></text></g><g><title>ntdll`RtlIsMultiSessionSku (1 samples, 0.05%)</title><rect x="0.3481%" y="149" width="0.0497%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="1"/><text x="0.5981%" y="159.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.05%)</title><rect x="0.3481%" y="133" width="0.0497%" height="15" fill="rgb(232,36,49)" fg:x="7" fg:w="1"/><text x="0.5981%" y="143.50"></text></g><g><title>ntdll`LdrLoadDll (6 samples, 0.30%)</title><rect x="0.1492%" y="341" width="0.2984%" height="15" fill="rgb(209,103,24)" fg:x="3" fg:w="6"/><text x="0.3992%" y="351.50"></text></g><g><title>ntdll`RtlUnicodeToCustomCPN (6 samples, 0.30%)</title><rect x="0.1492%" y="325" width="0.2984%" height="15" fill="rgb(229,88,8)" fg:x="3" fg:w="6"/><text x="0.3992%" y="335.50"></text></g><g><title>ntdll`RtlImageRvaToSection (6 samples, 0.30%)</title><rect x="0.1492%" y="309" width="0.2984%" height="15" fill="rgb(213,181,19)" fg:x="3" fg:w="6"/><text x="0.3992%" y="319.50"></text></g><g><title>ntdll`RtlCopyUnicodeString (3 samples, 0.15%)</title><rect x="0.2984%" y="293" width="0.1492%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="3"/><text x="0.5484%" y="303.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (3 samples, 0.15%)</title><rect x="0.2984%" y="277" width="0.1492%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="3"/><text x="0.5484%" y="287.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (3 samples, 0.15%)</title><rect x="0.2984%" y="261" width="0.1492%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="3"/><text x="0.5484%" y="271.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (3 samples, 0.15%)</title><rect x="0.2984%" y="245" width="0.1492%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="3"/><text x="0.5484%" y="255.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (3 samples, 0.15%)</title><rect x="0.2984%" y="229" width="0.1492%" height="15" fill="rgb(245,192,40)" fg:x="6" fg:w="3"/><text x="0.5484%" y="239.50"></text></g><g><title>KernelBase`GetProcessHeap (3 samples, 0.15%)</title><rect x="0.2984%" y="213" width="0.1492%" height="15" fill="rgb(238,167,29)" fg:x="6" fg:w="3"/><text x="0.5484%" y="223.50"></text></g><g><title>KernelBase`GetProcessHeap (3 samples, 0.15%)</title><rect x="0.2984%" y="197" width="0.1492%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="3"/><text x="0.5484%" y="207.50"></text></g><g><title>KernelBase`GetProductInfo (1 samples, 0.05%)</title><rect x="0.3978%" y="181" width="0.0497%" height="15" fill="rgb(231,60,39)" fg:x="8" fg:w="1"/><text x="0.6478%" y="191.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.05%)</title><rect x="0.3978%" y="165" width="0.0497%" height="15" fill="rgb(208,69,12)" fg:x="8" fg:w="1"/><text x="0.6478%" y="175.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.05%)</title><rect x="0.3978%" y="149" width="0.0497%" height="15" fill="rgb(235,93,37)" fg:x="8" fg:w="1"/><text x="0.6478%" y="159.50"></text></g><g><title>ntdll`NtTraceControl (1 samples, 0.05%)</title><rect x="0.3978%" y="133" width="0.0497%" height="15" fill="rgb(213,116,39)" fg:x="8" fg:w="1"/><text x="0.6478%" y="143.50"></text></g><g><title>ntdll`RtlCreateEnvironmentEx (1 samples, 0.05%)</title><rect x="0.4475%" y="341" width="0.0497%" height="15" fill="rgb(222,207,29)" fg:x="9" fg:w="1"/><text x="0.6975%" y="351.50"></text></g><g><title>ntdll`RtlCreateEnvironmentEx (1 samples, 0.05%)</title><rect x="0.4475%" y="325" width="0.0497%" height="15" fill="rgb(206,96,30)" fg:x="9" fg:w="1"/><text x="0.6975%" y="335.50"></text></g><g><title>ntdll`RtlQueryEnvironmentVariable_U (1 samples, 0.05%)</title><rect x="0.4475%" y="309" width="0.0497%" height="15" fill="rgb(218,138,4)" fg:x="9" fg:w="1"/><text x="0.6975%" y="319.50"></text></g><g><title>ntdll`RtlQueryEnvironmentVariable (1 samples, 0.05%)</title><rect x="0.4475%" y="293" width="0.0497%" height="15" fill="rgb(250,191,14)" fg:x="9" fg:w="1"/><text x="0.6975%" y="303.50"></text></g><g><title>ntdll`RtlCreateEnvironmentEx (1 samples, 0.05%)</title><rect x="0.4475%" y="277" width="0.0497%" height="15" fill="rgb(239,60,40)" fg:x="9" fg:w="1"/><text x="0.6975%" y="287.50"></text></g><g><title>ntdll`RtlCreateEnvironmentEx (1 samples, 0.05%)</title><rect x="0.4475%" y="261" width="0.0497%" height="15" fill="rgb(206,27,48)" fg:x="9" fg:w="1"/><text x="0.6975%" y="271.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.05%)</title><rect x="0.4475%" y="245" width="0.0497%" height="15" fill="rgb(225,35,8)" fg:x="9" fg:w="1"/><text x="0.6975%" y="255.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.05%)</title><rect x="0.4475%" y="229" width="0.0497%" height="15" fill="rgb(250,213,24)" fg:x="9" fg:w="1"/><text x="0.6975%" y="239.50"></text></g><g><title>ntdll`RtlGetNtProductType (1 samples, 0.05%)</title><rect x="0.4475%" y="213" width="0.0497%" height="15" fill="rgb(247,123,22)" fg:x="9" fg:w="1"/><text x="0.6975%" y="223.50"></text></g><g><title>ntdll`RtlDestroyHeap (1 samples, 0.05%)</title><rect x="0.4475%" y="197" width="0.0497%" height="15" fill="rgb(231,138,38)" fg:x="9" fg:w="1"/><text x="0.6975%" y="207.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.05%)</title><rect x="0.4475%" y="181" width="0.0497%" height="15" fill="rgb(231,145,46)" fg:x="9" fg:w="1"/><text x="0.6975%" y="191.50"></text></g><g><title>ntdll`RtlGetNtProductType (1 samples, 0.05%)</title><rect x="0.4475%" y="165" width="0.0497%" height="15" fill="rgb(251,118,11)" fg:x="9" fg:w="1"/><text x="0.6975%" y="175.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (1 samples, 0.05%)</title><rect x="0.4973%" y="341" width="0.0497%" height="15" fill="rgb(217,147,25)" fg:x="10" fg:w="1"/><text x="0.7473%" y="351.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (1 samples, 0.05%)</title><rect x="0.4973%" y="325" width="0.0497%" height="15" fill="rgb(247,81,37)" fg:x="10" fg:w="1"/><text x="0.7473%" y="335.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (1 samples, 0.05%)</title><rect x="0.4973%" y="309" width="0.0497%" height="15" fill="rgb(209,12,38)" fg:x="10" fg:w="1"/><text x="0.7473%" y="319.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (1 samples, 0.05%)</title><rect x="0.4973%" y="293" width="0.0497%" height="15" fill="rgb(227,1,9)" fg:x="10" fg:w="1"/><text x="0.7473%" y="303.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (1 samples, 0.05%)</title><rect x="0.4973%" y="277" width="0.0497%" height="15" fill="rgb(248,47,43)" fg:x="10" fg:w="1"/><text x="0.7473%" y="287.50"></text></g><g><title>ucrtbase`free_base (1 samples, 0.05%)</title><rect x="0.4973%" y="261" width="0.0497%" height="15" fill="rgb(221,10,30)" fg:x="10" fg:w="1"/><text x="0.7473%" y="271.50"></text></g><g><title>ucrtbase`free_base (1 samples, 0.05%)</title><rect x="0.4973%" y="245" width="0.0497%" height="15" fill="rgb(210,229,1)" fg:x="10" fg:w="1"/><text x="0.7473%" y="255.50"></text></g><g><title>ucrtbase`Gettnames (1 samples, 0.05%)</title><rect x="0.4973%" y="229" width="0.0497%" height="15" fill="rgb(222,148,37)" fg:x="10" fg:w="1"/><text x="0.7473%" y="239.50"></text></g><g><title>ucrtbase`Gettnames (1 samples, 0.05%)</title><rect x="0.4973%" y="213" width="0.0497%" height="15" fill="rgb(234,67,33)" fg:x="10" fg:w="1"/><text x="0.7473%" y="223.50"></text></g><g><title>ucrtbase`Gettnames (1 samples, 0.05%)</title><rect x="0.4973%" y="197" width="0.0497%" height="15" fill="rgb(247,98,35)" fg:x="10" fg:w="1"/><text x="0.7473%" y="207.50"></text></g><g><title>ucrtbase`_pctype_func (1 samples, 0.05%)</title><rect x="0.4973%" y="181" width="0.0497%" height="15" fill="rgb(247,138,52)" fg:x="10" fg:w="1"/><text x="0.7473%" y="191.50"></text></g><g><title>ucrtbase`_pctype_func (1 samples, 0.05%)</title><rect x="0.4973%" y="165" width="0.0497%" height="15" fill="rgb(213,79,30)" fg:x="10" fg:w="1"/><text x="0.7473%" y="175.50"></text></g><g><title>ucrtbase`_pctype_func (1 samples, 0.05%)</title><rect x="0.4973%" y="149" width="0.0497%" height="15" fill="rgb(246,177,23)" fg:x="10" fg:w="1"/><text x="0.7473%" y="159.50"></text></g><g><title>ucrtbase`_pctype_func (1 samples, 0.05%)</title><rect x="0.4973%" y="133" width="0.0497%" height="15" fill="rgb(230,62,27)" fg:x="10" fg:w="1"/><text x="0.7473%" y="143.50"></text></g><g><title>KernelBase`LCMapStringEx (1 samples, 0.05%)</title><rect x="0.4973%" y="117" width="0.0497%" height="15" fill="rgb(216,154,8)" fg:x="10" fg:w="1"/><text x="0.7473%" y="127.50"></text></g><g><title>KernelBase`GetDiskFreeSpaceW (1 samples, 0.05%)</title><rect x="0.4973%" y="101" width="0.0497%" height="15" fill="rgb(244,35,45)" fg:x="10" fg:w="1"/><text x="0.7473%" y="111.50"></text></g><g><title>KernelBase`GetMUIStringFromCache (1 samples, 0.05%)</title><rect x="0.4973%" y="85" width="0.0497%" height="15" fill="rgb(251,115,12)" fg:x="10" fg:w="1"/><text x="0.7473%" y="95.50"></text></g><g><title>ntdll`ZwOpenKey (1 samples, 0.05%)</title><rect x="0.4973%" y="69" width="0.0497%" height="15" fill="rgb(240,54,50)" fg:x="10" fg:w="1"/><text x="0.7473%" y="79.50"></text></g><g><title>ntdll`RtlGetCurrentDirectory_U (1 samples, 0.05%)</title><rect x="0.5470%" y="341" width="0.0497%" height="15" fill="rgb(233,84,52)" fg:x="11" fg:w="1"/><text x="0.7970%" y="351.50"></text></g><g><title>ntdll`RtlGetCurrentDirectory_U (1 samples, 0.05%)</title><rect x="0.5470%" y="325" width="0.0497%" height="15" fill="rgb(207,117,47)" fg:x="11" fg:w="1"/><text x="0.7970%" y="335.50"></text></g><g><title>ntdll`NtOpenFile (1 samples, 0.05%)</title><rect x="0.5470%" y="309" width="0.0497%" height="15" fill="rgb(249,43,39)" fg:x="11" fg:w="1"/><text x="0.7970%" y="319.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (1 samples, 0.05%)</title><rect x="0.5967%" y="341" width="0.0497%" height="15" fill="rgb(209,38,44)" fg:x="12" fg:w="1"/><text x="0.8467%" y="351.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (1 samples, 0.05%)</title><rect x="0.5967%" y="325" width="0.0497%" height="15" fill="rgb(236,212,23)" fg:x="12" fg:w="1"/><text x="0.8467%" y="335.50"></text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (1 samples, 0.05%)</title><rect x="0.5967%" y="309" width="0.0497%" height="15" fill="rgb(242,79,21)" fg:x="12" fg:w="1"/><text x="0.8467%" y="319.50"></text></g><g><title>ntdll`LdrAddRefDll (1 samples, 0.05%)</title><rect x="0.5967%" y="293" width="0.0497%" height="15" fill="rgb(211,96,35)" fg:x="12" fg:w="1"/><text x="0.8467%" y="303.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.05%)</title><rect x="0.5967%" y="277" width="0.0497%" height="15" fill="rgb(253,215,40)" fg:x="12" fg:w="1"/><text x="0.8467%" y="287.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (1 samples, 0.05%)</title><rect x="0.5967%" y="261" width="0.0497%" height="15" fill="rgb(211,81,21)" fg:x="12" fg:w="1"/><text x="0.8467%" y="271.50"></text></g><g><title>ntdll`RtlInterlockedFlushSList (1 samples, 0.05%)</title><rect x="0.5967%" y="245" width="0.0497%" height="15" fill="rgb(208,190,38)" fg:x="12" fg:w="1"/><text x="0.8467%" y="255.50"></text></g><g><title>ntdll`TpPostWork (1 samples, 0.05%)</title><rect x="0.5967%" y="229" width="0.0497%" height="15" fill="rgb(235,213,38)" fg:x="12" fg:w="1"/><text x="0.8467%" y="239.50"></text></g><g><title>ntdll`TpPostWork (1 samples, 0.05%)</title><rect x="0.5967%" y="213" width="0.0497%" height="15" fill="rgb(237,122,38)" fg:x="12" fg:w="1"/><text x="0.8467%" y="223.50"></text></g><g><title>ntdll`NtReleaseWorkerFactoryWorker (1 samples, 0.05%)</title><rect x="0.5967%" y="197" width="0.0497%" height="15" fill="rgb(244,218,35)" fg:x="12" fg:w="1"/><text x="0.8467%" y="207.50"></text></g><g><title>ntdll`LdrInitializeThunk (14 samples, 0.70%)</title><rect x="0.0000%" y="405" width="0.6962%" height="15" fill="rgb(240,68,47)" fg:x="0" fg:w="14"/><text x="0.2500%" y="415.50"></text></g><g><title>ntdll`LdrInitializeThunk (14 samples, 0.70%)</title><rect x="0.0000%" y="389" width="0.6962%" height="15" fill="rgb(210,16,53)" fg:x="0" fg:w="14"/><text x="0.2500%" y="399.50"></text></g><g><title>ntdll`EtwLogTraceEvent (14 samples, 0.70%)</title><rect x="0.0000%" y="373" width="0.6962%" height="15" fill="rgb(235,124,12)" fg:x="0" fg:w="14"/><text x="0.2500%" y="383.50"></text></g><g><title>ntdll`EtwLogTraceEvent (14 samples, 0.70%)</title><rect x="0.0000%" y="357" width="0.6962%" height="15" fill="rgb(224,169,11)" fg:x="0" fg:w="14"/><text x="0.2500%" y="367.50"></text></g><g><title>ntdll`RtlUnicodeToMultiByteN (1 samples, 0.05%)</title><rect x="0.6464%" y="341" width="0.0497%" height="15" fill="rgb(250,166,2)" fg:x="13" fg:w="1"/><text x="0.8964%" y="351.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.05%)</title><rect x="0.6464%" y="325" width="0.0497%" height="15" fill="rgb(242,216,29)" fg:x="13" fg:w="1"/><text x="0.8964%" y="335.50"></text></g><g><title>ntdll`LdrResolveDelayLoadedAPI (1 samples, 0.05%)</title><rect x="0.6464%" y="309" width="0.0497%" height="15" fill="rgb(230,116,27)" fg:x="13" fg:w="1"/><text x="0.8964%" y="319.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (1 samples, 0.05%)</title><rect x="0.6464%" y="293" width="0.0497%" height="15" fill="rgb(228,99,48)" fg:x="13" fg:w="1"/><text x="0.8964%" y="303.50"></text></g><g><title>ntdll`RtlWakeConditionVariable (1 samples, 0.05%)</title><rect x="0.6464%" y="277" width="0.0497%" height="15" fill="rgb(253,11,6)" fg:x="13" fg:w="1"/><text x="0.8964%" y="287.50"></text></g><g><title>ntdll`ZwProtectVirtualMemory (1 samples, 0.05%)</title><rect x="0.6464%" y="261" width="0.0497%" height="15" fill="rgb(247,143,39)" fg:x="13" fg:w="1"/><text x="0.8964%" y="271.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.05%)</title><rect x="0.8951%" y="357" width="0.0497%" height="15" fill="rgb(236,97,10)" fg:x="18" fg:w="1"/><text x="1.1451%" y="367.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.05%)</title><rect x="0.8951%" y="341" width="0.0497%" height="15" fill="rgb(233,208,19)" fg:x="18" fg:w="1"/><text x="1.1451%" y="351.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.05%)</title><rect x="0.8951%" y="325" width="0.0497%" height="15" fill="rgb(216,164,2)" fg:x="18" fg:w="1"/><text x="1.1451%" y="335.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.05%)</title><rect x="0.8951%" y="309" width="0.0497%" height="15" fill="rgb(220,129,5)" fg:x="18" fg:w="1"/><text x="1.1451%" y="319.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.05%)</title><rect x="0.8951%" y="293" width="0.0497%" height="15" fill="rgb(242,17,10)" fg:x="18" fg:w="1"/><text x="1.1451%" y="303.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (1 samples, 0.05%)</title><rect x="0.9448%" y="309" width="0.0497%" height="15" fill="rgb(242,107,0)" fg:x="19" fg:w="1"/><text x="1.1948%" y="319.50"></text></g><g><title>ntdll`NtClose (1 samples, 0.05%)</title><rect x="0.9945%" y="277" width="0.0497%" height="15" fill="rgb(251,28,31)" fg:x="20" fg:w="1"/><text x="1.2445%" y="287.50"></text></g><g><title>ntdll`RtlClearThreadWorkOnBehalfTicket (4 samples, 0.20%)</title><rect x="0.8951%" y="373" width="0.1989%" height="15" fill="rgb(233,223,10)" fg:x="18" fg:w="4"/><text x="1.1451%" y="383.50"></text></g><g><title>ntdll`RtlHashUnicodeString (3 samples, 0.15%)</title><rect x="0.9448%" y="357" width="0.1492%" height="15" fill="rgb(215,21,27)" fg:x="19" fg:w="3"/><text x="1.1948%" y="367.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (3 samples, 0.15%)</title><rect x="0.9448%" y="341" width="0.1492%" height="15" fill="rgb(232,23,21)" fg:x="19" fg:w="3"/><text x="1.1948%" y="351.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (3 samples, 0.15%)</title><rect x="0.9448%" y="325" width="0.1492%" height="15" fill="rgb(244,5,23)" fg:x="19" fg:w="3"/><text x="1.1948%" y="335.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (2 samples, 0.10%)</title><rect x="0.9945%" y="309" width="0.0995%" height="15" fill="rgb(226,81,46)" fg:x="20" fg:w="2"/><text x="1.2445%" y="319.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (2 samples, 0.10%)</title><rect x="0.9945%" y="293" width="0.0995%" height="15" fill="rgb(247,70,30)" fg:x="20" fg:w="2"/><text x="1.2445%" y="303.50"></text></g><g><title>ntdll`NtOpenFile (1 samples, 0.05%)</title><rect x="1.0443%" y="277" width="0.0497%" height="15" fill="rgb(212,68,19)" fg:x="21" fg:w="1"/><text x="1.2943%" y="287.50"></text></g><g><title>KernelBase`CloseHandle (1 samples, 0.05%)</title><rect x="7.6579%" y="261" width="0.0497%" height="15" fill="rgb(240,187,13)" fg:x="154" fg:w="1"/><text x="7.9079%" y="271.50"></text></g><g><title>ntdll`NtClose (1 samples, 0.05%)</title><rect x="7.6579%" y="245" width="0.0497%" height="15" fill="rgb(223,113,26)" fg:x="154" fg:w="1"/><text x="7.9079%" y="255.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (2 samples, 0.10%)</title><rect x="7.7076%" y="245" width="0.0995%" height="15" fill="rgb(206,192,2)" fg:x="155" fg:w="2"/><text x="7.9576%" y="255.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (2 samples, 0.10%)</title><rect x="7.7076%" y="229" width="0.0995%" height="15" fill="rgb(241,108,4)" fg:x="155" fg:w="2"/><text x="7.9576%" y="239.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.10%)</title><rect x="7.7076%" y="213" width="0.0995%" height="15" fill="rgb(247,173,49)" fg:x="155" fg:w="2"/><text x="7.9576%" y="223.50"></text></g><g><title>ntdll`ZwFreeVirtualMemory (2 samples, 0.10%)</title><rect x="7.7076%" y="197" width="0.0995%" height="15" fill="rgb(224,114,35)" fg:x="155" fg:w="2"/><text x="7.9576%" y="207.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (8 samples, 0.40%)</title><rect x="7.8071%" y="117" width="0.3978%" height="15" fill="rgb(245,159,27)" fg:x="157" fg:w="8"/><text x="8.0571%" y="127.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (8 samples, 0.40%)</title><rect x="7.8071%" y="101" width="0.3978%" height="15" fill="rgb(245,172,44)" fg:x="157" fg:w="8"/><text x="8.0571%" y="111.50"></text></g><g><title>ntdll`ZwFreeVirtualMemory (8 samples, 0.40%)</title><rect x="7.8071%" y="85" width="0.3978%" height="15" fill="rgb(236,23,11)" fg:x="157" fg:w="8"/><text x="8.0571%" y="95.50"></text></g><g><title>ntdll`RtlFreeHeap (11 samples, 0.55%)</title><rect x="7.7076%" y="261" width="0.5470%" height="15" fill="rgb(205,117,38)" fg:x="155" fg:w="11"/><text x="7.9576%" y="271.50"></text></g><g><title>ntdll`RtlMoveMemory (9 samples, 0.45%)</title><rect x="7.8071%" y="245" width="0.4475%" height="15" fill="rgb(237,72,25)" fg:x="157" fg:w="9"/><text x="8.0571%" y="255.50"></text></g><g><title>ntdll`RtlTryAcquirePebLock (9 samples, 0.45%)</title><rect x="7.8071%" y="229" width="0.4475%" height="15" fill="rgb(244,70,9)" fg:x="157" fg:w="9"/><text x="8.0571%" y="239.50"></text></g><g><title>ntdll`RtlTryAcquirePebLock (9 samples, 0.45%)</title><rect x="7.8071%" y="213" width="0.4475%" height="15" fill="rgb(217,125,39)" fg:x="157" fg:w="9"/><text x="8.0571%" y="223.50"></text></g><g><title>ntdll`RtlFreeHeap (9 samples, 0.45%)</title><rect x="7.8071%" y="197" width="0.4475%" height="15" fill="rgb(235,36,10)" fg:x="157" fg:w="9"/><text x="8.0571%" y="207.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (9 samples, 0.45%)</title><rect x="7.8071%" y="181" width="0.4475%" height="15" fill="rgb(251,123,47)" fg:x="157" fg:w="9"/><text x="8.0571%" y="191.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (9 samples, 0.45%)</title><rect x="7.8071%" y="165" width="0.4475%" height="15" fill="rgb(221,13,13)" fg:x="157" fg:w="9"/><text x="8.0571%" y="175.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (9 samples, 0.45%)</title><rect x="7.8071%" y="149" width="0.4475%" height="15" fill="rgb(238,131,9)" fg:x="157" fg:w="9"/><text x="8.0571%" y="159.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (9 samples, 0.45%)</title><rect x="7.8071%" y="133" width="0.4475%" height="15" fill="rgb(211,50,8)" fg:x="157" fg:w="9"/><text x="8.0571%" y="143.50"></text></g><g><title>ntdll`ZwFreeVirtualMemory (1 samples, 0.05%)</title><rect x="8.2049%" y="117" width="0.0497%" height="15" fill="rgb(245,182,24)" fg:x="165" fg:w="1"/><text x="8.4549%" y="127.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.05%)</title><rect x="8.2546%" y="181" width="0.0497%" height="15" fill="rgb(242,14,37)" fg:x="166" fg:w="1"/><text x="8.5046%" y="191.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.05%)</title><rect x="8.2546%" y="165" width="0.0497%" height="15" fill="rgb(246,228,12)" fg:x="166" fg:w="1"/><text x="8.5046%" y="175.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.05%)</title><rect x="8.2546%" y="149" width="0.0497%" height="15" fill="rgb(213,55,15)" fg:x="166" fg:w="1"/><text x="8.5046%" y="159.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.05%)</title><rect x="8.2546%" y="133" width="0.0497%" height="15" fill="rgb(209,9,3)" fg:x="166" fg:w="1"/><text x="8.5046%" y="143.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.05%)</title><rect x="8.2546%" y="117" width="0.0497%" height="15" fill="rgb(230,59,30)" fg:x="166" fg:w="1"/><text x="8.5046%" y="127.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.15%)</title><rect x="8.3043%" y="181" width="0.1492%" height="15" fill="rgb(209,121,21)" fg:x="167" fg:w="3"/><text x="8.5543%" y="191.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (3 samples, 0.15%)</title><rect x="8.3043%" y="165" width="0.1492%" height="15" fill="rgb(220,109,13)" fg:x="167" fg:w="3"/><text x="8.5543%" y="175.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (3 samples, 0.15%)</title><rect x="8.3043%" y="149" width="0.1492%" height="15" fill="rgb(232,18,1)" fg:x="167" fg:w="3"/><text x="8.5543%" y="159.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (3 samples, 0.15%)</title><rect x="8.3043%" y="133" width="0.1492%" height="15" fill="rgb(215,41,42)" fg:x="167" fg:w="3"/><text x="8.5543%" y="143.50"></text></g><g><title>ntdll`ZwFreeVirtualMemory (3 samples, 0.15%)</title><rect x="8.3043%" y="117" width="0.1492%" height="15" fill="rgb(224,123,36)" fg:x="167" fg:w="3"/><text x="8.5543%" y="127.50"></text></g><g><title>ray_tracer`alloc::raw_vec::RawVec&lt;tuple$&lt;ray_tracer::rendering::ray::Ray,f32&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;tuple$ (22 samples, 1.09%)</title><rect x="8.2546%" y="261" width="1.0940%" height="15" fill="rgb(240,125,3)" fg:x="166" fg:w="22"/><text x="8.5046%" y="271.50"></text></g><g><title>ray_tracer`alloc::raw_vec::finish_grow (22 samples, 1.09%)</title><rect x="8.2546%" y="245" width="1.0940%" height="15" fill="rgb(205,98,50)" fg:x="166" fg:w="22"/><text x="8.5046%" y="255.50"></text></g><g><title>ntdll`RtlReAllocateHeap (22 samples, 1.09%)</title><rect x="8.2546%" y="229" width="1.0940%" height="15" fill="rgb(205,185,37)" fg:x="166" fg:w="22"/><text x="8.5046%" y="239.50"></text></g><g><title>ntdll`RtlReAllocateHeap (22 samples, 1.09%)</title><rect x="8.2546%" y="213" width="1.0940%" height="15" fill="rgb(238,207,15)" fg:x="166" fg:w="22"/><text x="8.5046%" y="223.50"></text></g><g><title>ntdll`RtlReAllocateHeap (22 samples, 1.09%)</title><rect x="8.2546%" y="197" width="1.0940%" height="15" fill="rgb(213,199,42)" fg:x="166" fg:w="22"/><text x="8.5046%" y="207.50"></text></g><g><title>ntdll`RtlMoveMemory (18 samples, 0.90%)</title><rect x="8.4535%" y="181" width="0.8951%" height="15" fill="rgb(235,201,11)" fg:x="170" fg:w="18"/><text x="8.7035%" y="191.50"></text></g><g><title>ray_tracer`core::array::drain::drain_array_with&lt;f32,core::ops::try_trait::NeverShortCircuit&lt;array$&lt;f32,3&gt; &gt;,3,core::array::impl$23::try_map::closure_env$0&lt;f32,3,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;f32,f32,ray_tracer::math::vector::impl$0::negate::closure_env$0&gt;,core::ops::try_trait::NeverShortCircuit (2 samples, 0.10%)</title><rect x="9.3486%" y="261" width="0.0995%" height="15" fill="rgb(207,46,11)" fg:x="188" fg:w="2"/><text x="9.5986%" y="271.50"></text></g><g><title>ray_tracer`core::array::drain::drain_array_with&lt;f32,core::ops::try_trait::NeverShortCircuit&lt;array$&lt;f32,3&gt; &gt;,3,core::array::impl$23::try_map::closure_env$0&lt;f32,3,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;f32,f32,ray_tracer::math::vector::impl$0::normalize::closure_env$0&gt;,core::ops::try_trait::NeverShortCircuit (19 samples, 0.94%)</title><rect x="9.4480%" y="261" width="0.9448%" height="15" fill="rgb(241,35,35)" fg:x="190" fg:w="19"/><text x="9.6980%" y="271.50"></text></g><g><title>ray_tracer`core::array::drain::drain_array_with&lt;f32,core::ops::try_trait::NeverShortCircuit&lt;array$&lt;f32,3&gt; &gt;,3,core::array::impl$23::try_map::closure_env$0&lt;f32,3,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;f32,f32,ray_tracer::rendering::color::impl$3::mul::closure_env$0&gt;,core::ops::try_trait::NeverShortCircuit (2 samples, 0.10%)</title><rect x="10.3928%" y="261" width="0.0995%" height="15" fill="rgb(243,32,47)" fg:x="209" fg:w="2"/><text x="10.6428%" y="271.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.05%)</title><rect x="12.5808%" y="213" width="0.0497%" height="15" fill="rgb(247,202,23)" fg:x="253" fg:w="1"/><text x="12.8308%" y="223.50"></text></g><g><title>ntdll`RtlAllocateHeap (6 samples, 0.30%)</title><rect x="12.9289%" y="133" width="0.2984%" height="15" fill="rgb(219,102,11)" fg:x="260" fg:w="6"/><text x="13.1789%" y="143.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.05%)</title><rect x="13.1775%" y="117" width="0.0497%" height="15" fill="rgb(243,110,44)" fg:x="265" fg:w="1"/><text x="13.4275%" y="127.50"></text></g><g><title>ntdll`RtlEnumerateGenericTableWithoutSplayingAvl (3 samples, 0.15%)</title><rect x="13.2273%" y="133" width="0.1492%" height="15" fill="rgb(222,74,54)" fg:x="266" fg:w="3"/><text x="13.4773%" y="143.50"></text></g><g><title>ntdll`RtlEnumerateGenericTableWithoutSplayingAvl (3 samples, 0.15%)</title><rect x="13.2273%" y="117" width="0.1492%" height="15" fill="rgb(216,99,12)" fg:x="266" fg:w="3"/><text x="13.4773%" y="127.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.15%)</title><rect x="13.2273%" y="101" width="0.1492%" height="15" fill="rgb(226,22,26)" fg:x="266" fg:w="3"/><text x="13.4773%" y="111.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.15%)</title><rect x="13.2273%" y="85" width="0.1492%" height="15" fill="rgb(217,163,10)" fg:x="266" fg:w="3"/><text x="13.4773%" y="95.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.05%)</title><rect x="13.3267%" y="69" width="0.0497%" height="15" fill="rgb(213,25,53)" fg:x="268" fg:w="1"/><text x="13.5767%" y="79.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.05%)</title><rect x="13.3267%" y="53" width="0.0497%" height="15" fill="rgb(252,105,26)" fg:x="268" fg:w="1"/><text x="13.5767%" y="63.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.05%)</title><rect x="13.3267%" y="37" width="0.0497%" height="15" fill="rgb(220,39,43)" fg:x="268" fg:w="1"/><text x="13.5767%" y="47.50"></text></g><g><title>ntdll`RtlAllocateHeap (16 samples, 0.80%)</title><rect x="12.6305%" y="165" width="0.7956%" height="15" fill="rgb(229,68,48)" fg:x="254" fg:w="16"/><text x="12.8805%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (14 samples, 0.70%)</title><rect x="12.7300%" y="149" width="0.6962%" height="15" fill="rgb(252,8,32)" fg:x="256" fg:w="14"/><text x="12.9800%" y="159.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.05%)</title><rect x="13.3764%" y="133" width="0.0497%" height="15" fill="rgb(223,20,43)" fg:x="269" fg:w="1"/><text x="13.6264%" y="143.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.05%)</title><rect x="13.3764%" y="117" width="0.0497%" height="15" fill="rgb(229,81,49)" fg:x="269" fg:w="1"/><text x="13.6264%" y="127.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.05%)</title><rect x="13.3764%" y="101" width="0.0497%" height="15" fill="rgb(236,28,36)" fg:x="269" fg:w="1"/><text x="13.6264%" y="111.50"></text></g><g><title>ray_tracer`ray_tracer::rendering::canvas::Canvas::new (67 samples, 3.33%)</title><rect x="10.4923%" y="261" width="3.3317%" height="15" fill="rgb(249,185,26)" fg:x="211" fg:w="67"/><text x="10.7423%" y="271.50">ray..</text></g><g><title>ray_tracer`alloc::raw_vec::RawVec&lt;ray_tracer::rendering::color::Color,alloc::alloc::Global&gt;::reserve_for_push (26 samples, 1.29%)</title><rect x="12.5311%" y="245" width="1.2929%" height="15" fill="rgb(249,174,33)" fg:x="252" fg:w="26"/><text x="12.7811%" y="255.50"></text></g><g><title>ray_tracer`alloc::raw_vec::finish_grow (26 samples, 1.29%)</title><rect x="12.5311%" y="229" width="1.2929%" height="15" fill="rgb(233,201,37)" fg:x="252" fg:w="26"/><text x="12.7811%" y="239.50"></text></g><g><title>ntdll`RtlReAllocateHeap (24 samples, 1.19%)</title><rect x="12.6305%" y="213" width="1.1934%" height="15" fill="rgb(221,78,26)" fg:x="254" fg:w="24"/><text x="12.8805%" y="223.50"></text></g><g><title>ntdll`RtlReAllocateHeap (24 samples, 1.19%)</title><rect x="12.6305%" y="197" width="1.1934%" height="15" fill="rgb(250,127,30)" fg:x="254" fg:w="24"/><text x="12.8805%" y="207.50"></text></g><g><title>ntdll`RtlReAllocateHeap (24 samples, 1.19%)</title><rect x="12.6305%" y="181" width="1.1934%" height="15" fill="rgb(230,49,44)" fg:x="254" fg:w="24"/><text x="12.8805%" y="191.50"></text></g><g><title>ntdll`RtlMoveMemory (8 samples, 0.40%)</title><rect x="13.4262%" y="165" width="0.3978%" height="15" fill="rgb(229,67,23)" fg:x="270" fg:w="8"/><text x="13.6762%" y="175.50"></text></g><g><title>kernel32`HeapFree (1 samples, 0.05%)</title><rect x="18.2994%" y="245" width="0.0497%" height="15" fill="rgb(249,83,47)" fg:x="368" fg:w="1"/><text x="18.5494%" y="255.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (58 samples, 2.88%)</title><rect x="19.7911%" y="229" width="2.8841%" height="15" fill="rgb(215,43,3)" fg:x="398" fg:w="58"/><text x="20.0411%" y="239.50">nt..</text></g><g><title>ntdll`RtlFreeHeap (6 samples, 0.30%)</title><rect x="22.3769%" y="213" width="0.2984%" height="15" fill="rgb(238,154,13)" fg:x="450" fg:w="6"/><text x="22.6269%" y="223.50"></text></g><g><title>ntdll`RtlFreeHeap (199 samples, 9.90%)</title><rect x="18.3491%" y="245" width="9.8956%" height="15" fill="rgb(219,56,2)" fg:x="369" fg:w="199"/><text x="18.5991%" y="255.50">ntdll`RtlFreeH..</text></g><g><title>ntdll`RtlMoveMemory (112 samples, 5.57%)</title><rect x="22.6753%" y="229" width="5.5694%" height="15" fill="rgb(233,0,4)" fg:x="456" fg:w="112"/><text x="22.9253%" y="239.50">ntdll`R..</text></g><g><title>ray_tracer`core::fmt::impl$0::write_str (32 samples, 1.59%)</title><rect x="34.9080%" y="213" width="1.5912%" height="15" fill="rgb(235,30,7)" fg:x="702" fg:w="32"/><text x="35.1580%" y="223.50"></text></g><g><title>vcruntime140`memcpy (13 samples, 0.65%)</title><rect x="35.8528%" y="197" width="0.6464%" height="15" fill="rgb(250,79,13)" fg:x="721" fg:w="13"/><text x="36.1028%" y="207.50"></text></g><g><title>ray_tracer`core::fmt::Formatter::pad_integral (111 samples, 5.52%)</title><rect x="38.8364%" y="197" width="5.5196%" height="15" fill="rgb(211,146,34)" fg:x="781" fg:w="111"/><text x="39.0864%" y="207.50">ray_tra..</text></g><g><title>ray_tracer`core::fmt::impl$9::pad_integral::write_prefix (46 samples, 2.29%)</title><rect x="42.0686%" y="181" width="2.2874%" height="15" fill="rgb(228,22,38)" fg:x="846" fg:w="46"/><text x="42.3186%" y="191.50">r..</text></g><g><title>ntdll`RtlAllocateHeap (16 samples, 0.80%)</title><rect x="56.7877%" y="117" width="0.7956%" height="15" fill="rgb(235,168,5)" fg:x="1142" fg:w="16"/><text x="57.0377%" y="127.50"></text></g><g><title>ntdll`RtlAllocateHeap (224 samples, 11.14%)</title><rect x="48.6822%" y="149" width="11.1387%" height="15" fill="rgb(221,155,16)" fg:x="979" fg:w="224"/><text x="48.9322%" y="159.50">ntdll`RtlAllocat..</text></g><g><title>ntdll`RtlAllocateHeap (176 samples, 8.75%)</title><rect x="51.0691%" y="133" width="8.7519%" height="15" fill="rgb(215,215,53)" fg:x="1027" fg:w="176"/><text x="51.3191%" y="143.50">ntdll`RtlAll..</text></g><g><title>ntdll`RtlUnhandledExceptionFilter (45 samples, 2.24%)</title><rect x="57.5833%" y="117" width="2.2377%" height="15" fill="rgb(223,4,10)" fg:x="1158" fg:w="45"/><text x="57.8333%" y="127.50">n..</text></g><g><title>ray_tracer`_rust_alloc (1 samples, 0.05%)</title><rect x="59.8210%" y="149" width="0.0497%" height="15" fill="rgb(234,103,6)" fg:x="1203" fg:w="1"/><text x="60.0710%" y="159.50"></text></g><g><title>ray_tracer`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle (285 samples, 14.17%)</title><rect x="46.2954%" y="181" width="14.1721%" height="15" fill="rgb(227,97,0)" fg:x="931" fg:w="285"/><text x="46.5454%" y="191.50">ray_tracer`alloc::raw_..</text></g><g><title>ray_tracer`alloc::raw_vec::finish_grow (257 samples, 12.78%)</title><rect x="47.6877%" y="165" width="12.7797%" height="15" fill="rgb(234,150,53)" fg:x="959" fg:w="257"/><text x="47.9377%" y="175.50">ray_tracer`alloc::r..</text></g><g><title>ray_tracer`std::alloc::__default_lib_allocator::__rdl_alloc (12 samples, 0.60%)</title><rect x="59.8707%" y="149" width="0.5967%" height="15" fill="rgb(228,201,54)" fg:x="1204" fg:w="12"/><text x="60.1207%" y="159.50"></text></g><g><title>ray_tracer`alloc::fmt::format::format_inner (668 samples, 33.22%)</title><rect x="28.2447%" y="245" width="33.2173%" height="15" fill="rgb(222,22,37)" fg:x="568" fg:w="668"/><text x="28.4947%" y="255.50">ray_tracer`alloc::fmt::format::format_inner</text></g><g><title>ray_tracer`core::fmt::write (574 samples, 28.54%)</title><rect x="32.9189%" y="229" width="28.5430%" height="15" fill="rgb(237,53,32)" fg:x="662" fg:w="574"/><text x="33.1689%" y="239.50">ray_tracer`core::fmt::write</text></g><g><title>ray_tracer`core::fmt::num::imp::impl$1::fmt (502 samples, 24.96%)</title><rect x="36.4993%" y="213" width="24.9627%" height="15" fill="rgb(233,25,53)" fg:x="734" fg:w="502"/><text x="36.7493%" y="223.50">ray_tracer`core::fmt::num::imp::impl$1::..</text></g><g><title>ray_tracer`core::fmt::impl$0::write_str (344 samples, 17.11%)</title><rect x="44.3560%" y="197" width="17.1059%" height="15" fill="rgb(210,40,34)" fg:x="892" fg:w="344"/><text x="44.6060%" y="207.50">ray_tracer`core::fmt::impl..</text></g><g><title>vcruntime140`memcpy (20 samples, 0.99%)</title><rect x="60.4674%" y="181" width="0.9945%" height="15" fill="rgb(241,220,44)" fg:x="1216" fg:w="20"/><text x="60.7174%" y="191.50"></text></g><g><title>ray_tracer`core::array::drain::drain_array_with&lt;f32,core::ops::try_trait::NeverShortCircuit&lt;array$&lt;u8,3&gt; &gt;,3,core::array::impl$23::try_map::closure_env$0&lt;f32,3,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;u8,f32,ray_tracer::rendering::color::impl$0::to_rgb::closure_env$0&gt;,core::ops::try_trait::NeverShortCircuit (310 samples, 15.42%)</title><rect x="61.4620%" y="245" width="15.4152%" height="15" fill="rgb(235,28,35)" fg:x="1236" fg:w="310"/><text x="61.7120%" y="255.50">ray_tracer`core::array::..</text></g><g><title>ucrtbase`roundf (204 samples, 10.14%)</title><rect x="66.7330%" y="229" width="10.1442%" height="15" fill="rgb(210,56,17)" fg:x="1342" fg:w="204"/><text x="66.9830%" y="239.50">ucrtbase`roundf</text></g><g><title>ucrtbase`fd_int (142 samples, 7.06%)</title><rect x="69.8160%" y="213" width="7.0612%" height="15" fill="rgb(224,130,29)" fg:x="1404" fg:w="142"/><text x="70.0660%" y="223.50">ucrtbase`..</text></g><g><title>ray_tracer`core::slice::memchr::memrchr (248 samples, 12.33%)</title><rect x="76.8772%" y="245" width="12.3322%" height="15" fill="rgb(235,212,8)" fg:x="1546" fg:w="248"/><text x="77.1272%" y="255.50">ray_tracer`core::s..</text></g><g><title>ray_tracer`std::alloc::__default_lib_allocator::__rdl_dealloc (3 samples, 0.15%)</title><rect x="89.2093%" y="245" width="0.1492%" height="15" fill="rgb(223,33,50)" fg:x="1794" fg:w="3"/><text x="89.4593%" y="255.50"></text></g><g><title>ray_tracer`ray_tracer::rendering::canvas::Canvas::to_ppm (1,541 samples, 76.63%)</title><rect x="13.8240%" y="261" width="76.6285%" height="15" fill="rgb(219,149,13)" fg:x="278" fg:w="1541"/><text x="14.0740%" y="271.50">ray_tracer`ray_tracer::rendering::canvas::Canvas::to_ppm</text></g><g><title>vcruntime140`memcpy (22 samples, 1.09%)</title><rect x="89.3585%" y="245" width="1.0940%" height="15" fill="rgb(250,156,29)" fg:x="1797" fg:w="22"/><text x="89.6085%" y="255.50"></text></g><g><title>ray_tracer`core::array::drain::drain_array_with&lt;f32,array$&lt;tuple$&lt;f32,f32&gt;,3&gt;,3,core::array::impl$23::zip::closure_env$0 (3 samples, 0.15%)</title><rect x="94.1820%" y="245" width="0.1492%" height="15" fill="rgb(216,193,19)" fg:x="1894" fg:w="3"/><text x="94.4320%" y="255.50"></text></g><g><title>ray_tracer`core::array::drain::drain_array_with&lt;f32,core::ops::try_trait::NeverShortCircuit&lt;array$&lt;f32,3&gt; &gt;,3,core::array::impl$23::try_map::closure_env$0&lt;f32,3,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;f32,f32,ray_tracer::math::vector::impl$0::normalize::closure_env$0&gt;,core::ops::try_trait::NeverShortCircuit (10 samples, 0.50%)</title><rect x="94.3312%" y="245" width="0.4973%" height="15" fill="rgb(216,135,14)" fg:x="1897" fg:w="10"/><text x="94.5812%" y="255.50"></text></g><g><title>ray_tracer`core::array::drain::drain_array_with&lt;f32,core::ops::try_trait::NeverShortCircuit&lt;array$&lt;f32,3&gt; &gt;,3,core::array::impl$23::try_map::closure_env$0&lt;f32,3,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;f32,f32,ray_tracer::rendering::color::impl$3::mul::closure_env$0&gt;,core::ops::try_trait::NeverShortCircuit (14 samples, 0.70%)</title><rect x="94.8284%" y="245" width="0.6962%" height="15" fill="rgb(241,47,5)" fg:x="1907" fg:w="14"/><text x="95.0784%" y="255.50"></text></g><g><title>ray_tracer`core::array::drain::drain_array_with&lt;tuple$&lt;f32,f32&gt;,core::ops::try_trait::NeverShortCircuit&lt;array$&lt;f32,3&gt; &gt;,3,core::array::impl$23::try_map::closure_env$0&lt;tuple$&lt;f32,f32&gt;,3,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;f32,tuple$&lt;f32,f32&gt;,ray_tracer::rendering::color::impl$1::add::closure_env$0&gt;,core::ops::try_trait::NeverShortCircuit (9 samples, 0.45%)</title><rect x="95.5246%" y="245" width="0.4475%" height="15" fill="rgb(233,42,35)" fg:x="1921" fg:w="9"/><text x="95.7746%" y="255.50"></text></g><g><title>ucrtbase`fminl (3 samples, 0.15%)</title><rect x="97.4142%" y="197" width="0.1492%" height="15" fill="rgb(231,13,6)" fg:x="1959" fg:w="3"/><text x="97.6642%" y="207.50"></text></g><g><title>ucrtbase`o_free (3 samples, 0.15%)</title><rect x="97.4142%" y="181" width="0.1492%" height="15" fill="rgb(207,181,40)" fg:x="1959" fg:w="3"/><text x="97.6642%" y="191.50"></text></g><g><title>KernelBase`FlsGetValue (3 samples, 0.15%)</title><rect x="97.4142%" y="165" width="0.1492%" height="15" fill="rgb(254,173,49)" fg:x="1959" fg:w="3"/><text x="97.6642%" y="175.50"></text></g><g><title>ntdll`RtlFlsGetValue (3 samples, 0.15%)</title><rect x="97.4142%" y="149" width="0.1492%" height="15" fill="rgb(221,1,38)" fg:x="1959" fg:w="3"/><text x="97.6642%" y="159.50"></text></g><g><title>ucrtbase`fmodf (18 samples, 0.90%)</title><rect x="97.5634%" y="197" width="0.8951%" height="15" fill="rgb(206,124,46)" fg:x="1962" fg:w="18"/><text x="97.8134%" y="207.50"></text></g><g><title>ucrtbase`fmod (17 samples, 0.85%)</title><rect x="97.6131%" y="181" width="0.8454%" height="15" fill="rgb(249,21,11)" fg:x="1963" fg:w="17"/><text x="97.8631%" y="191.50"></text></g><g><title>ucrtbase`fmod (9 samples, 0.45%)</title><rect x="98.6077%" y="181" width="0.4475%" height="15" fill="rgb(222,201,40)" fg:x="1983" fg:w="9"/><text x="98.8577%" y="191.50"></text></g><g><title>ray_tracer`ray_tracer::rendering::lighting (180 samples, 8.95%)</title><rect x="90.4525%" y="261" width="8.9508%" height="15" fill="rgb(235,61,29)" fg:x="1819" fg:w="180"/><text x="90.7025%" y="271.50">ray_tracer`ra..</text></g><g><title>ucrtbase`powf (69 samples, 3.43%)</title><rect x="95.9722%" y="245" width="3.4311%" height="15" fill="rgb(219,207,3)" fg:x="1930" fg:w="69"/><text x="96.2222%" y="255.50">ucr..</text></g><g><title>ucrtbase`log2 (47 samples, 2.34%)</title><rect x="97.0661%" y="229" width="2.3371%" height="15" fill="rgb(222,56,46)" fg:x="1952" fg:w="47"/><text x="97.3161%" y="239.50">u..</text></g><g><title>ucrtbase`hypotf (41 samples, 2.04%)</title><rect x="97.3645%" y="213" width="2.0388%" height="15" fill="rgb(239,76,54)" fg:x="1958" fg:w="41"/><text x="97.6145%" y="223.50">u..</text></g><g><title>ucrtbase`hypotf (19 samples, 0.94%)</title><rect x="98.4585%" y="197" width="0.9448%" height="15" fill="rgb(231,124,27)" fg:x="1980" fg:w="19"/><text x="98.7085%" y="207.50"></text></g><g><title>ucrtbase`fmodf (7 samples, 0.35%)</title><rect x="99.0552%" y="181" width="0.3481%" height="15" fill="rgb(249,195,6)" fg:x="1992" fg:w="7"/><text x="99.3052%" y="191.50"></text></g><g><title>ucrtbase`fmod (6 samples, 0.30%)</title><rect x="99.1049%" y="165" width="0.2984%" height="15" fill="rgb(237,174,47)" fg:x="1993" fg:w="6"/><text x="99.3549%" y="175.50"></text></g><g><title>KernelBase`GetCurrentThread (1 samples, 0.05%)</title><rect x="99.4033%" y="213" width="0.0497%" height="15" fill="rgb(206,201,31)" fg:x="1999" fg:w="1"/><text x="99.6533%" y="223.50"></text></g><g><title>KernelBase`PathGetCharTypeW (1 samples, 0.05%)</title><rect x="99.4033%" y="197" width="0.0497%" height="15" fill="rgb(231,57,52)" fg:x="1999" fg:w="1"/><text x="99.6533%" y="207.50"></text></g><g><title>KernelBase`PathGetCharTypeW (1 samples, 0.05%)</title><rect x="99.4033%" y="181" width="0.0497%" height="15" fill="rgb(248,177,22)" fg:x="1999" fg:w="1"/><text x="99.6533%" y="191.50"></text></g><g><title>KernelBase`PsmGetKeyFromProcess (1 samples, 0.05%)</title><rect x="99.4033%" y="165" width="0.0497%" height="15" fill="rgb(215,211,37)" fg:x="1999" fg:w="1"/><text x="99.6533%" y="175.50"></text></g><g><title>KernelBase`ArmFeatureUsageSubscriberFlushNotification (1 samples, 0.05%)</title><rect x="99.4033%" y="149" width="0.0497%" height="15" fill="rgb(241,128,51)" fg:x="1999" fg:w="1"/><text x="99.6533%" y="159.50"></text></g><g><title>KernelBase`CreateThreadpoolTimer (1 samples, 0.05%)</title><rect x="99.4033%" y="133" width="0.0497%" height="15" fill="rgb(227,165,31)" fg:x="1999" fg:w="1"/><text x="99.6533%" y="143.50"></text></g><g><title>ntdll`TpSetTimerEx (1 samples, 0.05%)</title><rect x="99.4033%" y="117" width="0.0497%" height="15" fill="rgb(228,167,24)" fg:x="1999" fg:w="1"/><text x="99.6533%" y="127.50"></text></g><g><title>ntdll`TpSetWaitEx (1 samples, 0.05%)</title><rect x="99.4033%" y="101" width="0.0497%" height="15" fill="rgb(228,143,12)" fg:x="1999" fg:w="1"/><text x="99.6533%" y="111.50"></text></g><g><title>ntdll`TpSetWaitEx (1 samples, 0.05%)</title><rect x="99.4033%" y="85" width="0.0497%" height="15" fill="rgb(249,149,8)" fg:x="1999" fg:w="1"/><text x="99.6533%" y="95.50"></text></g><g><title>ntdll`NtSetTimer2 (1 samples, 0.05%)</title><rect x="99.4033%" y="69" width="0.0497%" height="15" fill="rgb(243,35,44)" fg:x="1999" fg:w="1"/><text x="99.6533%" y="79.50"></text></g><g><title>ray_tracer`std::sys::windows::fs::File::open (4 samples, 0.20%)</title><rect x="99.4033%" y="261" width="0.1989%" height="15" fill="rgb(246,89,9)" fg:x="1999" fg:w="4"/><text x="99.6533%" y="271.50"></text></g><g><title>KernelBase`CreateFileW (4 samples, 0.20%)</title><rect x="99.4033%" y="245" width="0.1989%" height="15" fill="rgb(233,213,13)" fg:x="1999" fg:w="4"/><text x="99.6533%" y="255.50"></text></g><g><title>KernelBase`CreateFileW (4 samples, 0.20%)</title><rect x="99.4033%" y="229" width="0.1989%" height="15" fill="rgb(233,141,41)" fg:x="1999" fg:w="4"/><text x="99.6533%" y="239.50"></text></g><g><title>ntdll`NtCreateFile (3 samples, 0.15%)</title><rect x="99.4530%" y="213" width="0.1492%" height="15" fill="rgb(239,167,4)" fg:x="2000" fg:w="3"/><text x="99.7030%" y="223.50"></text></g><g><title>ray_tracer`main (1,982 samples, 98.56%)</title><rect x="1.0940%" y="357" width="98.5579%" height="15" fill="rgb(209,217,16)" fg:x="22" fg:w="1982"/><text x="1.3440%" y="367.50">ray_tracer`main</text></g><g><title>ray_tracer`std::rt::lang_start_internal (1,982 samples, 98.56%)</title><rect x="1.0940%" y="341" width="98.5579%" height="15" fill="rgb(219,88,35)" fg:x="22" fg:w="1982"/><text x="1.3440%" y="351.50">ray_tracer`std::rt::lang_start_internal</text></g><g><title>ray_tracer`core::ops::function::FnOnce::call_once&lt;std::rt::lang_start::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$ (1,982 samples, 98.56%)</title><rect x="1.0940%" y="325" width="98.5579%" height="15" fill="rgb(220,193,23)" fg:x="22" fg:w="1982"/><text x="1.3440%" y="335.50">ray_tracer`core::ops::function::FnOnce::call_once&lt;std::rt::lang_start::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$</text></g><g><title>ray_tracer`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$ (1,982 samples, 98.56%)</title><rect x="1.0940%" y="309" width="98.5579%" height="15" fill="rgb(230,90,52)" fg:x="22" fg:w="1982"/><text x="1.3440%" y="319.50">ray_tracer`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$</text></g><g><title>ray_tracer`ray_tracer::main (1,982 samples, 98.56%)</title><rect x="1.0940%" y="293" width="98.5579%" height="15" fill="rgb(252,106,19)" fg:x="22" fg:w="1982"/><text x="1.3440%" y="303.50">ray_tracer`ray_tracer::main</text></g><g><title>ray_tracer`ray_tracer::checkpoints::shaded_circle::run (1,982 samples, 98.56%)</title><rect x="1.0940%" y="277" width="98.5579%" height="15" fill="rgb(206,74,20)" fg:x="22" fg:w="1982"/><text x="1.3440%" y="287.50">ray_tracer`ray_tracer::checkpoints::shaded_circle::run</text></g><g><title>ray_tracer`std::sys::windows::handle::Handle::write (1 samples, 0.05%)</title><rect x="99.6022%" y="261" width="0.0497%" height="15" fill="rgb(230,138,44)" fg:x="2003" fg:w="1"/><text x="99.8522%" y="271.50"></text></g><g><title>ray_tracer`std::sys::windows::handle::Handle::synchronous_write (1 samples, 0.05%)</title><rect x="99.6022%" y="245" width="0.0497%" height="15" fill="rgb(235,182,43)" fg:x="2003" fg:w="1"/><text x="99.8522%" y="255.50"></text></g><g><title>ntdll`NtWriteFile (1 samples, 0.05%)</title><rect x="99.6022%" y="229" width="0.0497%" height="15" fill="rgb(242,16,51)" fg:x="2003" fg:w="1"/><text x="99.8522%" y="239.50"></text></g><g><title>kernel32`ExitProcess (1 samples, 0.05%)</title><rect x="99.6519%" y="325" width="0.0497%" height="15" fill="rgb(248,9,4)" fg:x="2004" fg:w="1"/><text x="99.9019%" y="335.50"></text></g><g><title>ntdll`RtlExitUserProcess (1 samples, 0.05%)</title><rect x="99.6519%" y="309" width="0.0497%" height="15" fill="rgb(210,31,22)" fg:x="2004" fg:w="1"/><text x="99.9019%" y="319.50"></text></g><g><title>ntdll`LdrShutdownProcess (1 samples, 0.05%)</title><rect x="99.6519%" y="293" width="0.0497%" height="15" fill="rgb(239,54,39)" fg:x="2004" fg:w="1"/><text x="99.9019%" y="303.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (1 samples, 0.05%)</title><rect x="99.6519%" y="277" width="0.0497%" height="15" fill="rgb(230,99,41)" fg:x="2004" fg:w="1"/><text x="99.9019%" y="287.50"></text></g><g><title>KernelBase`GetProcessHeap (1 samples, 0.05%)</title><rect x="99.6519%" y="261" width="0.0497%" height="15" fill="rgb(253,106,12)" fg:x="2004" fg:w="1"/><text x="99.9019%" y="271.50"></text></g><g><title>KernelBase`GetProcessHeap (1 samples, 0.05%)</title><rect x="99.6519%" y="245" width="0.0497%" height="15" fill="rgb(213,46,41)" fg:x="2004" fg:w="1"/><text x="99.9019%" y="255.50"></text></g><g><title>KernelBase`AddDependencyToProcessPackageGraph (1 samples, 0.05%)</title><rect x="99.6519%" y="229" width="0.0497%" height="15" fill="rgb(215,133,35)" fg:x="2004" fg:w="1"/><text x="99.9019%" y="239.50"></text></g><g><title>KernelBase`AddDependencyToProcessPackageGraph (1 samples, 0.05%)</title><rect x="99.6519%" y="213" width="0.0497%" height="15" fill="rgb(213,28,5)" fg:x="2004" fg:w="1"/><text x="99.9019%" y="223.50"></text></g><g><title>KernelBase`AddDependencyToProcessPackageGraph (1 samples, 0.05%)</title><rect x="99.6519%" y="197" width="0.0497%" height="15" fill="rgb(215,77,49)" fg:x="2004" fg:w="1"/><text x="99.9019%" y="207.50"></text></g><g><title>KernelBase`lstrcmp (1 samples, 0.05%)</title><rect x="99.6519%" y="181" width="0.0497%" height="15" fill="rgb(248,100,22)" fg:x="2004" fg:w="1"/><text x="99.9019%" y="191.50"></text></g><g><title>KernelBase`lstrcmp (1 samples, 0.05%)</title><rect x="99.6519%" y="165" width="0.0497%" height="15" fill="rgb(208,67,9)" fg:x="2004" fg:w="1"/><text x="99.9019%" y="175.50"></text></g><g><title>ntdll`NtQueryWnfStateData (1 samples, 0.05%)</title><rect x="99.6519%" y="149" width="0.0497%" height="15" fill="rgb(219,133,21)" fg:x="2004" fg:w="1"/><text x="99.9019%" y="159.50"></text></g><g><title>ntdll`RtlCopyUnicodeString (1 samples, 0.05%)</title><rect x="99.7016%" y="229" width="0.0497%" height="15" fill="rgb(246,46,29)" fg:x="2005" fg:w="1"/><text x="99.9516%" y="239.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (1 samples, 0.05%)</title><rect x="99.7016%" y="213" width="0.0497%" height="15" fill="rgb(246,185,52)" fg:x="2005" fg:w="1"/><text x="99.9516%" y="223.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (1 samples, 0.05%)</title><rect x="99.7016%" y="197" width="0.0497%" height="15" fill="rgb(252,136,11)" fg:x="2005" fg:w="1"/><text x="99.9516%" y="207.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (1 samples, 0.05%)</title><rect x="99.7016%" y="181" width="0.0497%" height="15" fill="rgb(219,138,53)" fg:x="2005" fg:w="1"/><text x="99.9516%" y="191.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (1 samples, 0.05%)</title><rect x="99.7016%" y="165" width="0.0497%" height="15" fill="rgb(211,51,23)" fg:x="2005" fg:w="1"/><text x="99.9516%" y="175.50"></text></g><g><title>msvcrt`wfindnexti64 (1 samples, 0.05%)</title><rect x="99.7016%" y="149" width="0.0497%" height="15" fill="rgb(247,221,28)" fg:x="2005" fg:w="1"/><text x="99.9516%" y="159.50"></text></g><g><title>msvcrt`write (1 samples, 0.05%)</title><rect x="99.7016%" y="133" width="0.0497%" height="15" fill="rgb(251,222,45)" fg:x="2005" fg:w="1"/><text x="99.9516%" y="143.50"></text></g><g><title>msvcrt`setmbcp (1 samples, 0.05%)</title><rect x="99.7016%" y="117" width="0.0497%" height="15" fill="rgb(217,162,53)" fg:x="2005" fg:w="1"/><text x="99.9516%" y="127.50"></text></g><g><title>msvcrt`setmbcp (1 samples, 0.05%)</title><rect x="99.7016%" y="101" width="0.0497%" height="15" fill="rgb(229,93,14)" fg:x="2005" fg:w="1"/><text x="99.9516%" y="111.50"></text></g><g><title>ntdll`LdrLoadDll (1 samples, 0.05%)</title><rect x="99.7514%" y="197" width="0.0497%" height="15" fill="rgb(209,67,49)" fg:x="2006" fg:w="1"/><text x="100.0014%" y="207.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.05%)</title><rect x="99.7514%" y="181" width="0.0497%" height="15" fill="rgb(213,87,29)" fg:x="2006" fg:w="1"/><text x="100.0014%" y="191.50"></text></g><g><title>ntdll`NtQueryAttributesFile (1 samples, 0.05%)</title><rect x="99.7514%" y="165" width="0.0497%" height="15" fill="rgb(205,151,52)" fg:x="2006" fg:w="1"/><text x="100.0014%" y="175.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.05%)</title><rect x="99.8011%" y="181" width="0.0497%" height="15" fill="rgb(253,215,39)" fg:x="2007" fg:w="1"/><text x="100.0511%" y="191.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (1 samples, 0.05%)</title><rect x="99.8011%" y="165" width="0.0497%" height="15" fill="rgb(221,220,41)" fg:x="2007" fg:w="1"/><text x="100.0511%" y="175.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (1 samples, 0.05%)</title><rect x="99.8011%" y="149" width="0.0497%" height="15" fill="rgb(218,133,21)" fg:x="2007" fg:w="1"/><text x="100.0511%" y="159.50"></text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (1 samples, 0.05%)</title><rect x="99.8011%" y="133" width="0.0497%" height="15" fill="rgb(221,193,43)" fg:x="2007" fg:w="1"/><text x="100.0511%" y="143.50"></text></g><g><title>ntdll`LdrAddRefDll (1 samples, 0.05%)</title><rect x="99.8011%" y="117" width="0.0497%" height="15" fill="rgb(240,128,52)" fg:x="2007" fg:w="1"/><text x="100.0511%" y="127.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.05%)</title><rect x="99.8011%" y="101" width="0.0497%" height="15" fill="rgb(253,114,12)" fg:x="2007" fg:w="1"/><text x="100.0511%" y="111.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.05%)</title><rect x="99.8011%" y="85" width="0.0497%" height="15" fill="rgb(215,223,47)" fg:x="2007" fg:w="1"/><text x="100.0511%" y="95.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.05%)</title><rect x="99.8011%" y="69" width="0.0497%" height="15" fill="rgb(248,225,23)" fg:x="2007" fg:w="1"/><text x="100.0511%" y="79.50"></text></g><g><title>ntdll`NtClose (1 samples, 0.05%)</title><rect x="99.8508%" y="181" width="0.0497%" height="15" fill="rgb(250,108,0)" fg:x="2008" fg:w="1"/><text x="100.1008%" y="191.50"></text></g><g><title>ucrtbase`exit (6 samples, 0.30%)</title><rect x="99.6519%" y="357" width="0.2984%" height="15" fill="rgb(228,208,7)" fg:x="2004" fg:w="6"/><text x="99.9019%" y="367.50"></text></g><g><title>ucrtbase`exit (6 samples, 0.30%)</title><rect x="99.6519%" y="341" width="0.2984%" height="15" fill="rgb(244,45,10)" fg:x="2004" fg:w="6"/><text x="99.9019%" y="351.50"></text></g><g><title>ucrtbase`mbsicmp_l (5 samples, 0.25%)</title><rect x="99.7016%" y="325" width="0.2486%" height="15" fill="rgb(207,125,25)" fg:x="2005" fg:w="5"/><text x="99.9516%" y="335.50"></text></g><g><title>ucrtbase`o_iswascii (5 samples, 0.25%)</title><rect x="99.7016%" y="309" width="0.2486%" height="15" fill="rgb(210,195,18)" fg:x="2005" fg:w="5"/><text x="99.9516%" y="319.50"></text></g><g><title>KernelBase`LoadLibraryExW (5 samples, 0.25%)</title><rect x="99.7016%" y="293" width="0.2486%" height="15" fill="rgb(249,80,12)" fg:x="2005" fg:w="5"/><text x="99.9516%" y="303.50"></text></g><g><title>ntdll`LdrLoadDll (5 samples, 0.25%)</title><rect x="99.7016%" y="277" width="0.2486%" height="15" fill="rgb(221,65,9)" fg:x="2005" fg:w="5"/><text x="99.9516%" y="287.50"></text></g><g><title>ntdll`RtlUnicodeToCustomCPN (5 samples, 0.25%)</title><rect x="99.7016%" y="261" width="0.2486%" height="15" fill="rgb(235,49,36)" fg:x="2005" fg:w="5"/><text x="99.9516%" y="271.50"></text></g><g><title>ntdll`RtlImageRvaToSection (5 samples, 0.25%)</title><rect x="99.7016%" y="245" width="0.2486%" height="15" fill="rgb(225,32,20)" fg:x="2005" fg:w="5"/><text x="99.9516%" y="255.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (4 samples, 0.20%)</title><rect x="99.7514%" y="229" width="0.1989%" height="15" fill="rgb(215,141,46)" fg:x="2006" fg:w="4"/><text x="100.0014%" y="239.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (4 samples, 0.20%)</title><rect x="99.7514%" y="213" width="0.1989%" height="15" fill="rgb(250,160,47)" fg:x="2006" fg:w="4"/><text x="100.0014%" y="223.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (3 samples, 0.15%)</title><rect x="99.8011%" y="197" width="0.1492%" height="15" fill="rgb(216,222,40)" fg:x="2007" fg:w="3"/><text x="100.0511%" y="207.50"></text></g><g><title>ntdll`RtlLengthSecurityDescriptor (1 samples, 0.05%)</title><rect x="99.9005%" y="181" width="0.0497%" height="15" fill="rgb(234,217,39)" fg:x="2009" fg:w="1"/><text x="100.1505%" y="191.50"></text></g><g><title>ntdll`RtlLengthSecurityDescriptor (1 samples, 0.05%)</title><rect x="99.9005%" y="165" width="0.0497%" height="15" fill="rgb(207,178,40)" fg:x="2009" fg:w="1"/><text x="100.1505%" y="175.50"></text></g><g><title>ntdll`NtOpenFile (1 samples, 0.05%)</title><rect x="99.9005%" y="149" width="0.0497%" height="15" fill="rgb(221,136,13)" fg:x="2009" fg:w="1"/><text x="100.1505%" y="159.50"></text></g><g><title>all (2,011 samples, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(249,199,10)" fg:x="0" fg:w="2011"/><text x="0.2500%" y="431.50"></text></g><g><title>ntdll`RtlUserThreadStart (1,997 samples, 99.30%)</title><rect x="0.6962%" y="405" width="99.3038%" height="15" fill="rgb(249,222,13)" fg:x="14" fg:w="1997"/><text x="0.9462%" y="415.50">ntdll`RtlUserThreadStart</text></g><g><title>kernel32`BaseThreadInitThunk (1,993 samples, 99.10%)</title><rect x="0.8951%" y="389" width="99.1049%" height="15" fill="rgb(244,185,38)" fg:x="18" fg:w="1993"/><text x="1.1451%" y="399.50">kernel32`BaseThreadInitThunk</text></g><g><title>ray_tracer`__scrt_common_main_seh (1,989 samples, 98.91%)</title><rect x="1.0940%" y="373" width="98.9060%" height="15" fill="rgb(236,202,9)" fg:x="22" fg:w="1989"/><text x="1.3440%" y="383.50">ray_tracer`__scrt_common_main_seh</text></g><g><title>ucrtbase`initterm (1 samples, 0.05%)</title><rect x="99.9503%" y="357" width="0.0497%" height="15" fill="rgb(250,229,37)" fg:x="2010" fg:w="1"/><text x="100.2003%" y="367.50"></text></g><g><title>ray_tracer`pre_cpp_initialization (1 samples, 0.05%)</title><rect x="99.9503%" y="341" width="0.0497%" height="15" fill="rgb(206,174,23)" fg:x="2010" fg:w="1"/><text x="100.2003%" y="351.50"></text></g><g><title>KernelBase`SetUnhandledExceptionFilter (1 samples, 0.05%)</title><rect x="99.9503%" y="325" width="0.0497%" height="15" fill="rgb(211,33,43)" fg:x="2010" fg:w="1"/><text x="100.2003%" y="335.50"></text></g><g><title>KernelBase`SetUnhandledExceptionFilter (1 samples, 0.05%)</title><rect x="99.9503%" y="309" width="0.0497%" height="15" fill="rgb(245,58,50)" fg:x="2010" fg:w="1"/><text x="100.2003%" y="319.50"></text></g><g><title>ntdll`ZwQueryVirtualMemory (1 samples, 0.05%)</title><rect x="99.9503%" y="293" width="0.0497%" height="15" fill="rgb(244,68,36)" fg:x="2010" fg:w="1"/><text x="100.2003%" y="303.50"></text></g></svg></svg>