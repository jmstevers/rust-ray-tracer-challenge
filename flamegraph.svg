<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="566" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="549.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="549.00"> </text><svg id="frames" x="10" width="1180" total_samples="4863"><g><title>ntdll`LdrGetDllHandleEx (2 samples, 0.04%)</title><rect x="0.0000%" y="437" width="0.0411%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="447.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (2 samples, 0.04%)</title><rect x="0.0000%" y="421" width="0.0411%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="431.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (2 samples, 0.04%)</title><rect x="0.0000%" y="405" width="0.0411%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2"/><text x="0.2500%" y="415.50"></text></g><g><title>ntdll`LdrInitShimEngineDynamic (1 samples, 0.02%)</title><rect x="0.0411%" y="437" width="0.0206%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="0.2911%" y="447.50"></text></g><g><title>ntdll`LdrInitShimEngineDynamic (1 samples, 0.02%)</title><rect x="0.0411%" y="421" width="0.0206%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.2911%" y="431.50"></text></g><g><title>ntdll`ZwOpenKey (1 samples, 0.02%)</title><rect x="0.0411%" y="405" width="0.0206%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.2911%" y="415.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (2 samples, 0.04%)</title><rect x="0.0617%" y="325" width="0.0411%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="2"/><text x="0.3117%" y="335.50"></text></g><g><title>ntdll`LdrGetDllHandleByMapping (3 samples, 0.06%)</title><rect x="0.0617%" y="389" width="0.0617%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="3"/><text x="0.3117%" y="399.50"></text></g><g><title>ntdll`LdrAddRefDll (3 samples, 0.06%)</title><rect x="0.0617%" y="373" width="0.0617%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="3"/><text x="0.3117%" y="383.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (3 samples, 0.06%)</title><rect x="0.0617%" y="357" width="0.0617%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="3"/><text x="0.3117%" y="367.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (3 samples, 0.06%)</title><rect x="0.0617%" y="341" width="0.0617%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="3"/><text x="0.3117%" y="351.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (1 samples, 0.02%)</title><rect x="0.1028%" y="325" width="0.0206%" height="15" fill="rgb(240,193,28)" fg:x="5" fg:w="1"/><text x="0.3528%" y="335.50"></text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (1 samples, 0.02%)</title><rect x="0.1028%" y="309" width="0.0206%" height="15" fill="rgb(216,20,37)" fg:x="5" fg:w="1"/><text x="0.3528%" y="319.50"></text></g><g><title>ntdll`LdrAddRefDll (1 samples, 0.02%)</title><rect x="0.1028%" y="293" width="0.0206%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="1"/><text x="0.3528%" y="303.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.02%)</title><rect x="0.1028%" y="277" width="0.0206%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="0.3528%" y="287.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.02%)</title><rect x="0.1028%" y="261" width="0.0206%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="1"/><text x="0.3528%" y="271.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.02%)</title><rect x="0.1028%" y="245" width="0.0206%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="1"/><text x="0.3528%" y="255.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 0.02%)</title><rect x="0.1028%" y="229" width="0.0206%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="1"/><text x="0.3528%" y="239.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (1 samples, 0.02%)</title><rect x="0.1234%" y="341" width="0.0206%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="1"/><text x="0.3734%" y="351.50"></text></g><g><title>kernel32`BaseThreadInitThunk (1 samples, 0.02%)</title><rect x="0.1234%" y="325" width="0.0206%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="1"/><text x="0.3734%" y="335.50"></text></g><g><title>kernel32`BaseThreadInitThunk (1 samples, 0.02%)</title><rect x="0.1234%" y="309" width="0.0206%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="1"/><text x="0.3734%" y="319.50"></text></g><g><title>kernel32`uaw_wcsrchr (1 samples, 0.02%)</title><rect x="0.1234%" y="293" width="0.0206%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="1"/><text x="0.3734%" y="303.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.02%)</title><rect x="0.1234%" y="277" width="0.0206%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="1"/><text x="0.3734%" y="287.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 0.02%)</title><rect x="0.1234%" y="261" width="0.0206%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="1"/><text x="0.3734%" y="271.50"></text></g><g><title>ntdll`LdrGetDllPath (1 samples, 0.02%)</title><rect x="0.1234%" y="245" width="0.0206%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="1"/><text x="0.3734%" y="255.50"></text></g><g><title>ntdll`NtTraceControl (1 samples, 0.02%)</title><rect x="0.1234%" y="229" width="0.0206%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="1"/><text x="0.3734%" y="239.50"></text></g><g><title>KernelBase`GetCPHashNode (1 samples, 0.02%)</title><rect x="0.1645%" y="277" width="0.0206%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="1"/><text x="0.4145%" y="287.50"></text></g><g><title>KernelBase`GetMUIStringFromCache (1 samples, 0.02%)</title><rect x="0.1645%" y="261" width="0.0206%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="1"/><text x="0.4145%" y="271.50"></text></g><g><title>KernelBase`GetMUIStringFromCache (1 samples, 0.02%)</title><rect x="0.1645%" y="245" width="0.0206%" height="15" fill="rgb(214,148,48)" fg:x="8" fg:w="1"/><text x="0.4145%" y="255.50"></text></g><g><title>KernelBase`GetMUIStringFromCache (1 samples, 0.02%)</title><rect x="0.1645%" y="229" width="0.0206%" height="15" fill="rgb(232,36,49)" fg:x="8" fg:w="1"/><text x="0.4145%" y="239.50"></text></g><g><title>KernelBase`GetMUIStringFromCache (1 samples, 0.02%)</title><rect x="0.1645%" y="213" width="0.0206%" height="15" fill="rgb(209,103,24)" fg:x="8" fg:w="1"/><text x="0.4145%" y="223.50"></text></g><g><title>KernelBase`LCMapStringEx (1 samples, 0.02%)</title><rect x="0.1645%" y="197" width="0.0206%" height="15" fill="rgb(229,88,8)" fg:x="8" fg:w="1"/><text x="0.4145%" y="207.50"></text></g><g><title>KernelBase`GetProductInfo (1 samples, 0.02%)</title><rect x="0.1851%" y="277" width="0.0206%" height="15" fill="rgb(213,181,19)" fg:x="9" fg:w="1"/><text x="0.4351%" y="287.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.02%)</title><rect x="0.1851%" y="261" width="0.0206%" height="15" fill="rgb(254,191,54)" fg:x="9" fg:w="1"/><text x="0.4351%" y="271.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.02%)</title><rect x="0.1851%" y="245" width="0.0206%" height="15" fill="rgb(241,83,37)" fg:x="9" fg:w="1"/><text x="0.4351%" y="255.50"></text></g><g><title>ntdll`NtTraceControl (1 samples, 0.02%)</title><rect x="0.1851%" y="229" width="0.0206%" height="15" fill="rgb(233,36,39)" fg:x="9" fg:w="1"/><text x="0.4351%" y="239.50"></text></g><g><title>ntdll`LdrLoadDll (8 samples, 0.16%)</title><rect x="0.0617%" y="437" width="0.1645%" height="15" fill="rgb(226,3,54)" fg:x="3" fg:w="8"/><text x="0.3117%" y="447.50"></text></g><g><title>ntdll`RtlUnicodeToCustomCPN (8 samples, 0.16%)</title><rect x="0.0617%" y="421" width="0.1645%" height="15" fill="rgb(245,192,40)" fg:x="3" fg:w="8"/><text x="0.3117%" y="431.50"></text></g><g><title>ntdll`RtlImageRvaToSection (8 samples, 0.16%)</title><rect x="0.0617%" y="405" width="0.1645%" height="15" fill="rgb(238,167,29)" fg:x="3" fg:w="8"/><text x="0.3117%" y="415.50"></text></g><g><title>ntdll`RtlCopyUnicodeString (5 samples, 0.10%)</title><rect x="0.1234%" y="389" width="0.1028%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="5"/><text x="0.3734%" y="399.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (5 samples, 0.10%)</title><rect x="0.1234%" y="373" width="0.1028%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="5"/><text x="0.3734%" y="383.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (5 samples, 0.10%)</title><rect x="0.1234%" y="357" width="0.1028%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="5"/><text x="0.3734%" y="367.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (4 samples, 0.08%)</title><rect x="0.1439%" y="341" width="0.0823%" height="15" fill="rgb(235,93,37)" fg:x="7" fg:w="4"/><text x="0.3939%" y="351.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (4 samples, 0.08%)</title><rect x="0.1439%" y="325" width="0.0823%" height="15" fill="rgb(213,116,39)" fg:x="7" fg:w="4"/><text x="0.3939%" y="335.50"></text></g><g><title>KernelBase`GetProcessHeap (4 samples, 0.08%)</title><rect x="0.1439%" y="309" width="0.0823%" height="15" fill="rgb(222,207,29)" fg:x="7" fg:w="4"/><text x="0.3939%" y="319.50"></text></g><g><title>KernelBase`GetProcessHeap (4 samples, 0.08%)</title><rect x="0.1439%" y="293" width="0.0823%" height="15" fill="rgb(206,96,30)" fg:x="7" fg:w="4"/><text x="0.3939%" y="303.50"></text></g><g><title>KernelBase`PerfSetCounterSetInfo (1 samples, 0.02%)</title><rect x="0.2056%" y="277" width="0.0206%" height="15" fill="rgb(218,138,4)" fg:x="10" fg:w="1"/><text x="0.4556%" y="287.50"></text></g><g><title>ntdll`RtlCreateEnvironmentEx (1 samples, 0.02%)</title><rect x="0.2262%" y="437" width="0.0206%" height="15" fill="rgb(250,191,14)" fg:x="11" fg:w="1"/><text x="0.4762%" y="447.50"></text></g><g><title>ntdll`RtlCreateEnvironmentEx (1 samples, 0.02%)</title><rect x="0.2262%" y="421" width="0.0206%" height="15" fill="rgb(239,60,40)" fg:x="11" fg:w="1"/><text x="0.4762%" y="431.50"></text></g><g><title>ntdll`RtlQueryEnvironmentVariable_U (1 samples, 0.02%)</title><rect x="0.2262%" y="405" width="0.0206%" height="15" fill="rgb(206,27,48)" fg:x="11" fg:w="1"/><text x="0.4762%" y="415.50"></text></g><g><title>ntdll`RtlQueryEnvironmentVariable (1 samples, 0.02%)</title><rect x="0.2262%" y="389" width="0.0206%" height="15" fill="rgb(225,35,8)" fg:x="11" fg:w="1"/><text x="0.4762%" y="399.50"></text></g><g><title>ntdll`RtlCreateEnvironmentEx (1 samples, 0.02%)</title><rect x="0.2262%" y="373" width="0.0206%" height="15" fill="rgb(250,213,24)" fg:x="11" fg:w="1"/><text x="0.4762%" y="383.50"></text></g><g><title>ntdll`RtlCreateEnvironmentEx (1 samples, 0.02%)</title><rect x="0.2262%" y="357" width="0.0206%" height="15" fill="rgb(247,123,22)" fg:x="11" fg:w="1"/><text x="0.4762%" y="367.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.02%)</title><rect x="0.2262%" y="341" width="0.0206%" height="15" fill="rgb(231,138,38)" fg:x="11" fg:w="1"/><text x="0.4762%" y="351.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.02%)</title><rect x="0.2262%" y="325" width="0.0206%" height="15" fill="rgb(231,145,46)" fg:x="11" fg:w="1"/><text x="0.4762%" y="335.50"></text></g><g><title>ntdll`RtlGetNtProductType (1 samples, 0.02%)</title><rect x="0.2262%" y="309" width="0.0206%" height="15" fill="rgb(251,118,11)" fg:x="11" fg:w="1"/><text x="0.4762%" y="319.50"></text></g><g><title>ntdll`RtlDestroyHeap (1 samples, 0.02%)</title><rect x="0.2262%" y="293" width="0.0206%" height="15" fill="rgb(217,147,25)" fg:x="11" fg:w="1"/><text x="0.4762%" y="303.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.02%)</title><rect x="0.2262%" y="277" width="0.0206%" height="15" fill="rgb(247,81,37)" fg:x="11" fg:w="1"/><text x="0.4762%" y="287.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.02%)</title><rect x="0.2262%" y="261" width="0.0206%" height="15" fill="rgb(209,12,38)" fg:x="11" fg:w="1"/><text x="0.4762%" y="271.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.02%)</title><rect x="0.2262%" y="245" width="0.0206%" height="15" fill="rgb(227,1,9)" fg:x="11" fg:w="1"/><text x="0.4762%" y="255.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.02%)</title><rect x="0.2262%" y="229" width="0.0206%" height="15" fill="rgb(248,47,43)" fg:x="11" fg:w="1"/><text x="0.4762%" y="239.50"></text></g><g><title>advapi32`RegDeleteKeyExW (1 samples, 0.02%)</title><rect x="0.2468%" y="373" width="0.0206%" height="15" fill="rgb(221,10,30)" fg:x="12" fg:w="1"/><text x="0.4968%" y="383.50"></text></g><g><title>advapi32`RegDeleteKeyExW (1 samples, 0.02%)</title><rect x="0.2468%" y="357" width="0.0206%" height="15" fill="rgb(210,229,1)" fg:x="12" fg:w="1"/><text x="0.4968%" y="367.50"></text></g><g><title>advapi32`IdentifyCodeAuthzLevelW (1 samples, 0.02%)</title><rect x="0.2468%" y="341" width="0.0206%" height="15" fill="rgb(222,148,37)" fg:x="12" fg:w="1"/><text x="0.4968%" y="351.50"></text></g><g><title>advapi32`IdentifyCodeAuthzLevelW (1 samples, 0.02%)</title><rect x="0.2468%" y="325" width="0.0206%" height="15" fill="rgb(234,67,33)" fg:x="12" fg:w="1"/><text x="0.4968%" y="335.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.02%)</title><rect x="0.2468%" y="309" width="0.0206%" height="15" fill="rgb(247,98,35)" fg:x="12" fg:w="1"/><text x="0.4968%" y="319.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 0.02%)</title><rect x="0.2468%" y="293" width="0.0206%" height="15" fill="rgb(247,138,52)" fg:x="12" fg:w="1"/><text x="0.4968%" y="303.50"></text></g><g><title>ntdll`LdrGetDllPath (1 samples, 0.02%)</title><rect x="0.2468%" y="277" width="0.0206%" height="15" fill="rgb(213,79,30)" fg:x="12" fg:w="1"/><text x="0.4968%" y="287.50"></text></g><g><title>ntdll`NtTraceControl (1 samples, 0.02%)</title><rect x="0.2468%" y="261" width="0.0206%" height="15" fill="rgb(246,177,23)" fg:x="12" fg:w="1"/><text x="0.4968%" y="271.50"></text></g><g><title>bcrypt`BCryptRegisterConfigChangeNotify (1 samples, 0.02%)</title><rect x="0.2673%" y="373" width="0.0206%" height="15" fill="rgb(230,62,27)" fg:x="13" fg:w="1"/><text x="0.5173%" y="383.50"></text></g><g><title>bcrypt`BCryptDestroyHash (1 samples, 0.02%)</title><rect x="0.2673%" y="357" width="0.0206%" height="15" fill="rgb(216,154,8)" fg:x="13" fg:w="1"/><text x="0.5173%" y="367.50"></text></g><g><title>bcrypt`BCryptDestroyHash (1 samples, 0.02%)</title><rect x="0.2673%" y="341" width="0.0206%" height="15" fill="rgb(244,35,45)" fg:x="13" fg:w="1"/><text x="0.5173%" y="351.50"></text></g><g><title>bcrypt`BCryptDestroyHash (1 samples, 0.02%)</title><rect x="0.2673%" y="325" width="0.0206%" height="15" fill="rgb(251,115,12)" fg:x="13" fg:w="1"/><text x="0.5173%" y="335.50"></text></g><g><title>bcrypt`BCryptOpenAlgorithmProvider (1 samples, 0.02%)</title><rect x="0.2673%" y="309" width="0.0206%" height="15" fill="rgb(240,54,50)" fg:x="13" fg:w="1"/><text x="0.5173%" y="319.50"></text></g><g><title>ntdll`NtDeviceIoControlFile (1 samples, 0.02%)</title><rect x="0.2673%" y="293" width="0.0206%" height="15" fill="rgb(233,84,52)" fg:x="13" fg:w="1"/><text x="0.5173%" y="303.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (3 samples, 0.06%)</title><rect x="0.2468%" y="389" width="0.0617%" height="15" fill="rgb(207,117,47)" fg:x="12" fg:w="3"/><text x="0.4968%" y="399.50"></text></g><g><title>cryptbase`SystemFunction002 (1 samples, 0.02%)</title><rect x="0.2879%" y="373" width="0.0206%" height="15" fill="rgb(249,43,39)" fg:x="14" fg:w="1"/><text x="0.5379%" y="383.50"></text></g><g><title>cryptbase`SystemFunction002 (1 samples, 0.02%)</title><rect x="0.2879%" y="357" width="0.0206%" height="15" fill="rgb(209,38,44)" fg:x="14" fg:w="1"/><text x="0.5379%" y="367.50"></text></g><g><title>cryptbase`SystemFunction002 (1 samples, 0.02%)</title><rect x="0.2879%" y="341" width="0.0206%" height="15" fill="rgb(236,212,23)" fg:x="14" fg:w="1"/><text x="0.5379%" y="351.50"></text></g><g><title>ntdll`NtOpenFile (1 samples, 0.02%)</title><rect x="0.2879%" y="325" width="0.0206%" height="15" fill="rgb(242,79,21)" fg:x="14" fg:w="1"/><text x="0.5379%" y="335.50"></text></g><g><title>msvcrt`wfindnexti64 (1 samples, 0.02%)</title><rect x="0.3085%" y="357" width="0.0206%" height="15" fill="rgb(211,96,35)" fg:x="15" fg:w="1"/><text x="0.5585%" y="367.50"></text></g><g><title>msvcrt`strerror_s (1 samples, 0.02%)</title><rect x="0.3085%" y="341" width="0.0206%" height="15" fill="rgb(253,215,40)" fg:x="15" fg:w="1"/><text x="0.5585%" y="351.50"></text></g><g><title>KernelBase`GetEnvironmentStringsW (1 samples, 0.02%)</title><rect x="0.3085%" y="325" width="0.0206%" height="15" fill="rgb(211,81,21)" fg:x="15" fg:w="1"/><text x="0.5585%" y="335.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.02%)</title><rect x="0.3085%" y="309" width="0.0206%" height="15" fill="rgb(208,190,38)" fg:x="15" fg:w="1"/><text x="0.5585%" y="319.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.02%)</title><rect x="0.3085%" y="293" width="0.0206%" height="15" fill="rgb(235,213,38)" fg:x="15" fg:w="1"/><text x="0.5585%" y="303.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.02%)</title><rect x="0.3085%" y="277" width="0.0206%" height="15" fill="rgb(237,122,38)" fg:x="15" fg:w="1"/><text x="0.5585%" y="287.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.02%)</title><rect x="0.3085%" y="261" width="0.0206%" height="15" fill="rgb(244,218,35)" fg:x="15" fg:w="1"/><text x="0.5585%" y="271.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.02%)</title><rect x="0.3085%" y="245" width="0.0206%" height="15" fill="rgb(240,68,47)" fg:x="15" fg:w="1"/><text x="0.5585%" y="255.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (5 samples, 0.10%)</title><rect x="0.2468%" y="437" width="0.1028%" height="15" fill="rgb(210,16,53)" fg:x="12" fg:w="5"/><text x="0.4968%" y="447.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (5 samples, 0.10%)</title><rect x="0.2468%" y="421" width="0.1028%" height="15" fill="rgb(235,124,12)" fg:x="12" fg:w="5"/><text x="0.4968%" y="431.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (5 samples, 0.10%)</title><rect x="0.2468%" y="405" width="0.1028%" height="15" fill="rgb(224,169,11)" fg:x="12" fg:w="5"/><text x="0.4968%" y="415.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (2 samples, 0.04%)</title><rect x="0.3085%" y="389" width="0.0411%" height="15" fill="rgb(250,166,2)" fg:x="15" fg:w="2"/><text x="0.5585%" y="399.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (2 samples, 0.04%)</title><rect x="0.3085%" y="373" width="0.0411%" height="15" fill="rgb(242,216,29)" fg:x="15" fg:w="2"/><text x="0.5585%" y="383.50"></text></g><g><title>sechost`RegisterServiceCtrlHandlerW (1 samples, 0.02%)</title><rect x="0.3290%" y="357" width="0.0206%" height="15" fill="rgb(230,116,27)" fg:x="16" fg:w="1"/><text x="0.5790%" y="367.50"></text></g><g><title>sechost`RegisterServiceCtrlHandlerW (1 samples, 0.02%)</title><rect x="0.3290%" y="341" width="0.0206%" height="15" fill="rgb(228,99,48)" fg:x="16" fg:w="1"/><text x="0.5790%" y="351.50"></text></g><g><title>KernelBase`initterm (1 samples, 0.02%)</title><rect x="0.3290%" y="325" width="0.0206%" height="15" fill="rgb(253,11,6)" fg:x="16" fg:w="1"/><text x="0.5790%" y="335.50"></text></g><g><title>sechost`RegisterServiceCtrlHandlerW (1 samples, 0.02%)</title><rect x="0.3290%" y="309" width="0.0206%" height="15" fill="rgb(247,143,39)" fg:x="16" fg:w="1"/><text x="0.5790%" y="319.50"></text></g><g><title>KernelBase`_dllonexit3 (1 samples, 0.02%)</title><rect x="0.3290%" y="293" width="0.0206%" height="15" fill="rgb(236,97,10)" fg:x="16" fg:w="1"/><text x="0.5790%" y="303.50"></text></g><g><title>ntdll`RtlGetCurrentDirectory_U (1 samples, 0.02%)</title><rect x="0.3496%" y="437" width="0.0206%" height="15" fill="rgb(233,208,19)" fg:x="17" fg:w="1"/><text x="0.5996%" y="447.50"></text></g><g><title>ntdll`RtlGetCurrentDirectory_U (1 samples, 0.02%)</title><rect x="0.3496%" y="421" width="0.0206%" height="15" fill="rgb(216,164,2)" fg:x="17" fg:w="1"/><text x="0.5996%" y="431.50"></text></g><g><title>ntdll`NtOpenFile (1 samples, 0.02%)</title><rect x="0.3496%" y="405" width="0.0206%" height="15" fill="rgb(220,129,5)" fg:x="17" fg:w="1"/><text x="0.5996%" y="415.50"></text></g><g><title>ntdll`RtlIdentifierAuthoritySid (1 samples, 0.02%)</title><rect x="0.3701%" y="437" width="0.0206%" height="15" fill="rgb(242,17,10)" fg:x="18" fg:w="1"/><text x="0.6201%" y="447.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.02%)</title><rect x="0.3701%" y="421" width="0.0206%" height="15" fill="rgb(242,107,0)" fg:x="18" fg:w="1"/><text x="0.6201%" y="431.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 0.02%)</title><rect x="0.3701%" y="405" width="0.0206%" height="15" fill="rgb(251,28,31)" fg:x="18" fg:w="1"/><text x="0.6201%" y="415.50"></text></g><g><title>ntdll`LdrGetDllPath (1 samples, 0.02%)</title><rect x="0.3701%" y="389" width="0.0206%" height="15" fill="rgb(233,223,10)" fg:x="18" fg:w="1"/><text x="0.6201%" y="399.50"></text></g><g><title>ntdll`NtTraceControl (1 samples, 0.02%)</title><rect x="0.3701%" y="373" width="0.0206%" height="15" fill="rgb(215,21,27)" fg:x="18" fg:w="1"/><text x="0.6201%" y="383.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.02%)</title><rect x="0.3907%" y="357" width="0.0206%" height="15" fill="rgb(232,23,21)" fg:x="19" fg:w="1"/><text x="0.6407%" y="367.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.02%)</title><rect x="0.3907%" y="341" width="0.0206%" height="15" fill="rgb(244,5,23)" fg:x="19" fg:w="1"/><text x="0.6407%" y="351.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 0.02%)</title><rect x="0.3907%" y="325" width="0.0206%" height="15" fill="rgb(226,81,46)" fg:x="19" fg:w="1"/><text x="0.6407%" y="335.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.02%)</title><rect x="0.4113%" y="277" width="0.0206%" height="15" fill="rgb(247,70,30)" fg:x="20" fg:w="1"/><text x="0.6613%" y="287.50"></text></g><g><title>ntdll`RtlIsProcessorFeaturePresent (1 samples, 0.02%)</title><rect x="0.4113%" y="261" width="0.0206%" height="15" fill="rgb(212,68,19)" fg:x="20" fg:w="1"/><text x="0.6613%" y="271.50"></text></g><g><title>ntdll`RtlReleasePath (1 samples, 0.02%)</title><rect x="0.4113%" y="245" width="0.0206%" height="15" fill="rgb(240,187,13)" fg:x="20" fg:w="1"/><text x="0.6613%" y="255.50"></text></g><g><title>ntdll`RtlReleasePath (1 samples, 0.02%)</title><rect x="0.4113%" y="229" width="0.0206%" height="15" fill="rgb(223,113,26)" fg:x="20" fg:w="1"/><text x="0.6613%" y="239.50"></text></g><g><title>ntdll`ZwProtectVirtualMemory (1 samples, 0.02%)</title><rect x="0.4113%" y="213" width="0.0206%" height="15" fill="rgb(206,192,2)" fg:x="20" fg:w="1"/><text x="0.6613%" y="223.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (4 samples, 0.08%)</title><rect x="0.3907%" y="437" width="0.0823%" height="15" fill="rgb(241,108,4)" fg:x="19" fg:w="4"/><text x="0.6407%" y="447.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (4 samples, 0.08%)</title><rect x="0.3907%" y="421" width="0.0823%" height="15" fill="rgb(247,173,49)" fg:x="19" fg:w="4"/><text x="0.6407%" y="431.50"></text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (4 samples, 0.08%)</title><rect x="0.3907%" y="405" width="0.0823%" height="15" fill="rgb(224,114,35)" fg:x="19" fg:w="4"/><text x="0.6407%" y="415.50"></text></g><g><title>ntdll`LdrAddRefDll (4 samples, 0.08%)</title><rect x="0.3907%" y="389" width="0.0823%" height="15" fill="rgb(245,159,27)" fg:x="19" fg:w="4"/><text x="0.6407%" y="399.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (4 samples, 0.08%)</title><rect x="0.3907%" y="373" width="0.0823%" height="15" fill="rgb(245,172,44)" fg:x="19" fg:w="4"/><text x="0.6407%" y="383.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (3 samples, 0.06%)</title><rect x="0.4113%" y="357" width="0.0617%" height="15" fill="rgb(236,23,11)" fg:x="20" fg:w="3"/><text x="0.6613%" y="367.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (3 samples, 0.06%)</title><rect x="0.4113%" y="341" width="0.0617%" height="15" fill="rgb(205,117,38)" fg:x="20" fg:w="3"/><text x="0.6613%" y="351.50"></text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (3 samples, 0.06%)</title><rect x="0.4113%" y="325" width="0.0617%" height="15" fill="rgb(237,72,25)" fg:x="20" fg:w="3"/><text x="0.6613%" y="335.50"></text></g><g><title>ntdll`LdrAddRefDll (3 samples, 0.06%)</title><rect x="0.4113%" y="309" width="0.0617%" height="15" fill="rgb(244,70,9)" fg:x="20" fg:w="3"/><text x="0.6613%" y="319.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (3 samples, 0.06%)</title><rect x="0.4113%" y="293" width="0.0617%" height="15" fill="rgb(217,125,39)" fg:x="20" fg:w="3"/><text x="0.6613%" y="303.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (2 samples, 0.04%)</title><rect x="0.4318%" y="277" width="0.0411%" height="15" fill="rgb(235,36,10)" fg:x="21" fg:w="2"/><text x="0.6818%" y="287.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (2 samples, 0.04%)</title><rect x="0.4318%" y="261" width="0.0411%" height="15" fill="rgb(251,123,47)" fg:x="21" fg:w="2"/><text x="0.6818%" y="271.50"></text></g><g><title>ntdll`ZwProtectVirtualMemory (2 samples, 0.04%)</title><rect x="0.4318%" y="245" width="0.0411%" height="15" fill="rgb(221,13,13)" fg:x="21" fg:w="2"/><text x="0.6818%" y="255.50"></text></g><g><title>ntdll`RtlIsMultiSessionSku (1 samples, 0.02%)</title><rect x="0.4730%" y="437" width="0.0206%" height="15" fill="rgb(238,131,9)" fg:x="23" fg:w="1"/><text x="0.7230%" y="447.50"></text></g><g><title>ntdll`ZwOpenKey (1 samples, 0.02%)</title><rect x="0.4730%" y="421" width="0.0206%" height="15" fill="rgb(211,50,8)" fg:x="23" fg:w="1"/><text x="0.7230%" y="431.50"></text></g><g><title>ntdll`LdrInitializeThunk (25 samples, 0.51%)</title><rect x="0.0000%" y="485" width="0.5141%" height="15" fill="rgb(245,182,24)" fg:x="0" fg:w="25"/><text x="0.2500%" y="495.50"></text></g><g><title>ntdll`EtwLogTraceEvent (25 samples, 0.51%)</title><rect x="0.0000%" y="469" width="0.5141%" height="15" fill="rgb(242,14,37)" fg:x="0" fg:w="25"/><text x="0.2500%" y="479.50"></text></g><g><title>ntdll`EtwLogTraceEvent (25 samples, 0.51%)</title><rect x="0.0000%" y="453" width="0.5141%" height="15" fill="rgb(246,228,12)" fg:x="0" fg:w="25"/><text x="0.2500%" y="463.50"></text></g><g><title>ntdll`RtlUnicodeToMultiByteN (1 samples, 0.02%)</title><rect x="0.4935%" y="437" width="0.0206%" height="15" fill="rgb(213,55,15)" fg:x="24" fg:w="1"/><text x="0.7435%" y="447.50"></text></g><g><title>ntdll`RtlInitString (1 samples, 0.02%)</title><rect x="0.4935%" y="421" width="0.0206%" height="15" fill="rgb(209,9,3)" fg:x="24" fg:w="1"/><text x="0.7435%" y="431.50"></text></g><g><title>ntdll`LdrInitializeThunk (26 samples, 0.53%)</title><rect x="0.0000%" y="501" width="0.5346%" height="15" fill="rgb(230,59,30)" fg:x="0" fg:w="26"/><text x="0.2500%" y="511.50"></text></g><g><title>ntdll`RtlMoveMemory (1 samples, 0.02%)</title><rect x="0.5141%" y="485" width="0.0206%" height="15" fill="rgb(209,121,21)" fg:x="25" fg:w="1"/><text x="0.7641%" y="495.50"></text></g><g><title>ntdll`LdrCallEnclave (1 samples, 0.02%)</title><rect x="0.5141%" y="469" width="0.0206%" height="15" fill="rgb(220,109,13)" fg:x="25" fg:w="1"/><text x="0.7641%" y="479.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.02%)</title><rect x="0.5141%" y="453" width="0.0206%" height="15" fill="rgb(232,18,1)" fg:x="25" fg:w="1"/><text x="0.7641%" y="463.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (4 samples, 0.08%)</title><rect x="0.5552%" y="405" width="0.0823%" height="15" fill="rgb(215,41,42)" fg:x="27" fg:w="4"/><text x="0.8052%" y="415.50"></text></g><g><title>ntdll`LdrLoadDll (2 samples, 0.04%)</title><rect x="0.6375%" y="373" width="0.0411%" height="15" fill="rgb(224,123,36)" fg:x="31" fg:w="2"/><text x="0.8875%" y="383.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (2 samples, 0.04%)</title><rect x="0.6375%" y="357" width="0.0411%" height="15" fill="rgb(240,125,3)" fg:x="31" fg:w="2"/><text x="0.8875%" y="367.50"></text></g><g><title>ntdll`NtQueryAttributesFile (2 samples, 0.04%)</title><rect x="0.6375%" y="341" width="0.0411%" height="15" fill="rgb(205,98,50)" fg:x="31" fg:w="2"/><text x="0.8875%" y="351.50"></text></g><g><title>ntdll`LdrGetDllHandleByMapping (3 samples, 0.06%)</title><rect x="0.6375%" y="389" width="0.0617%" height="15" fill="rgb(205,185,37)" fg:x="31" fg:w="3"/><text x="0.8875%" y="399.50"></text></g><g><title>ntdll`RtlSetSecurityObject (1 samples, 0.02%)</title><rect x="0.6786%" y="373" width="0.0206%" height="15" fill="rgb(238,207,15)" fg:x="33" fg:w="1"/><text x="0.9286%" y="383.50"></text></g><g><title>ntdll`LdrGetDllPath (1 samples, 0.02%)</title><rect x="0.6786%" y="357" width="0.0206%" height="15" fill="rgb(213,199,42)" fg:x="33" fg:w="1"/><text x="0.9286%" y="367.50"></text></g><g><title>ntdll`LdrGetDllPath (1 samples, 0.02%)</title><rect x="0.6786%" y="341" width="0.0206%" height="15" fill="rgb(235,201,11)" fg:x="33" fg:w="1"/><text x="0.9286%" y="351.50"></text></g><g><title>ntdll`RtlWakeConditionVariable (1 samples, 0.02%)</title><rect x="0.6786%" y="325" width="0.0206%" height="15" fill="rgb(207,46,11)" fg:x="33" fg:w="1"/><text x="0.9286%" y="335.50"></text></g><g><title>ntdll`RtlWakeConditionVariable (1 samples, 0.02%)</title><rect x="0.6786%" y="309" width="0.0206%" height="15" fill="rgb(241,35,35)" fg:x="33" fg:w="1"/><text x="0.9286%" y="319.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.02%)</title><rect x="0.6786%" y="293" width="0.0206%" height="15" fill="rgb(243,32,47)" fg:x="33" fg:w="1"/><text x="0.9286%" y="303.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.02%)</title><rect x="0.6786%" y="277" width="0.0206%" height="15" fill="rgb(247,202,23)" fg:x="33" fg:w="1"/><text x="0.9286%" y="287.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.02%)</title><rect x="0.6992%" y="357" width="0.0206%" height="15" fill="rgb(219,102,11)" fg:x="34" fg:w="1"/><text x="0.9492%" y="367.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.02%)</title><rect x="0.6992%" y="341" width="0.0206%" height="15" fill="rgb(243,110,44)" fg:x="34" fg:w="1"/><text x="0.9492%" y="351.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 0.02%)</title><rect x="0.6992%" y="325" width="0.0206%" height="15" fill="rgb(222,74,54)" fg:x="34" fg:w="1"/><text x="0.9492%" y="335.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (2 samples, 0.04%)</title><rect x="0.6992%" y="373" width="0.0411%" height="15" fill="rgb(216,99,12)" fg:x="34" fg:w="2"/><text x="0.9492%" y="383.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.02%)</title><rect x="0.7197%" y="357" width="0.0206%" height="15" fill="rgb(226,22,26)" fg:x="35" fg:w="1"/><text x="0.9697%" y="367.50"></text></g><g><title>ntdll`RtlIsProcessorFeaturePresent (1 samples, 0.02%)</title><rect x="0.7197%" y="341" width="0.0206%" height="15" fill="rgb(217,163,10)" fg:x="35" fg:w="1"/><text x="0.9697%" y="351.50"></text></g><g><title>ntdll`RtlReleasePath (1 samples, 0.02%)</title><rect x="0.7197%" y="325" width="0.0206%" height="15" fill="rgb(213,25,53)" fg:x="35" fg:w="1"/><text x="0.9697%" y="335.50"></text></g><g><title>ntdll`RtlReleasePath (1 samples, 0.02%)</title><rect x="0.7197%" y="309" width="0.0206%" height="15" fill="rgb(252,105,26)" fg:x="35" fg:w="1"/><text x="0.9697%" y="319.50"></text></g><g><title>ntdll`ZwProtectVirtualMemory (1 samples, 0.02%)</title><rect x="0.7197%" y="293" width="0.0206%" height="15" fill="rgb(220,39,43)" fg:x="35" fg:w="1"/><text x="0.9697%" y="303.50"></text></g><g><title>ntdll`NtClose (2 samples, 0.04%)</title><rect x="0.7403%" y="373" width="0.0411%" height="15" fill="rgb(229,68,48)" fg:x="36" fg:w="2"/><text x="0.9903%" y="383.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (12 samples, 0.25%)</title><rect x="0.5552%" y="437" width="0.2468%" height="15" fill="rgb(252,8,32)" fg:x="27" fg:w="12"/><text x="0.8052%" y="447.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (12 samples, 0.25%)</title><rect x="0.5552%" y="421" width="0.2468%" height="15" fill="rgb(223,20,43)" fg:x="27" fg:w="12"/><text x="0.8052%" y="431.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (8 samples, 0.16%)</title><rect x="0.6375%" y="405" width="0.1645%" height="15" fill="rgb(229,81,49)" fg:x="31" fg:w="8"/><text x="0.8875%" y="415.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (5 samples, 0.10%)</title><rect x="0.6992%" y="389" width="0.1028%" height="15" fill="rgb(236,28,36)" fg:x="34" fg:w="5"/><text x="0.9492%" y="399.50"></text></g><g><title>ntdll`NtOpenFile (1 samples, 0.02%)</title><rect x="0.7814%" y="373" width="0.0206%" height="15" fill="rgb(249,185,26)" fg:x="38" fg:w="1"/><text x="1.0314%" y="383.50"></text></g><g><title>ntdll`RtlClearThreadWorkOnBehalfTicket (13 samples, 0.27%)</title><rect x="0.5552%" y="469" width="0.2673%" height="15" fill="rgb(249,174,33)" fg:x="27" fg:w="13"/><text x="0.8052%" y="479.50"></text></g><g><title>ntdll`RtlHashUnicodeString (13 samples, 0.27%)</title><rect x="0.5552%" y="453" width="0.2673%" height="15" fill="rgb(233,201,37)" fg:x="27" fg:w="13"/><text x="0.8052%" y="463.50"></text></g><g><title>ntdll`TpWorkOnBehalfSetTicket (1 samples, 0.02%)</title><rect x="0.8020%" y="437" width="0.0206%" height="15" fill="rgb(221,78,26)" fg:x="39" fg:w="1"/><text x="1.0520%" y="447.50"></text></g><g><title>ntdll`TpPostWork (1 samples, 0.02%)</title><rect x="0.8020%" y="421" width="0.0206%" height="15" fill="rgb(250,127,30)" fg:x="39" fg:w="1"/><text x="1.0520%" y="431.50"></text></g><g><title>ntdll`NtReleaseWorkerFactoryWorker (1 samples, 0.02%)</title><rect x="0.8020%" y="405" width="0.0206%" height="15" fill="rgb(230,49,44)" fg:x="39" fg:w="1"/><text x="1.0520%" y="415.50"></text></g><g><title>ray_tracer`__scrt_is_managed_app (1 samples, 0.02%)</title><rect x="0.8225%" y="453" width="0.0206%" height="15" fill="rgb(229,67,23)" fg:x="40" fg:w="1"/><text x="1.0725%" y="463.50"></text></g><g><title>KernelBase`CloseHandle (1 samples, 0.02%)</title><rect x="1.8301%" y="357" width="0.0206%" height="15" fill="rgb(249,83,47)" fg:x="89" fg:w="1"/><text x="2.0801%" y="367.50"></text></g><g><title>ntdll`NtClose (1 samples, 0.02%)</title><rect x="1.8301%" y="341" width="0.0206%" height="15" fill="rgb(215,43,3)" fg:x="89" fg:w="1"/><text x="2.0801%" y="351.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.06%)</title><rect x="1.8507%" y="357" width="0.0617%" height="15" fill="rgb(238,154,13)" fg:x="90" fg:w="3"/><text x="2.1007%" y="367.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (3 samples, 0.06%)</title><rect x="1.8507%" y="341" width="0.0617%" height="15" fill="rgb(219,56,2)" fg:x="90" fg:w="3"/><text x="2.1007%" y="351.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (3 samples, 0.06%)</title><rect x="1.8507%" y="325" width="0.0617%" height="15" fill="rgb(233,0,4)" fg:x="90" fg:w="3"/><text x="2.1007%" y="335.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (3 samples, 0.06%)</title><rect x="1.8507%" y="309" width="0.0617%" height="15" fill="rgb(235,30,7)" fg:x="90" fg:w="3"/><text x="2.1007%" y="319.50"></text></g><g><title>ntdll`ZwFreeVirtualMemory (3 samples, 0.06%)</title><rect x="1.8507%" y="293" width="0.0617%" height="15" fill="rgb(250,79,13)" fg:x="90" fg:w="3"/><text x="2.1007%" y="303.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.06%)</title><rect x="2.3442%" y="261" width="0.0617%" height="15" fill="rgb(211,146,34)" fg:x="114" fg:w="3"/><text x="2.5942%" y="271.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (3 samples, 0.06%)</title><rect x="2.3442%" y="245" width="0.0617%" height="15" fill="rgb(228,22,38)" fg:x="114" fg:w="3"/><text x="2.5942%" y="255.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (3 samples, 0.06%)</title><rect x="2.3442%" y="229" width="0.0617%" height="15" fill="rgb(235,168,5)" fg:x="114" fg:w="3"/><text x="2.5942%" y="239.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (3 samples, 0.06%)</title><rect x="2.3442%" y="213" width="0.0617%" height="15" fill="rgb(221,155,16)" fg:x="114" fg:w="3"/><text x="2.5942%" y="223.50"></text></g><g><title>ntdll`ZwFreeVirtualMemory (3 samples, 0.06%)</title><rect x="2.3442%" y="197" width="0.0617%" height="15" fill="rgb(215,215,53)" fg:x="114" fg:w="3"/><text x="2.5942%" y="207.50"></text></g><g><title>ray_tracer`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle (18 samples, 0.37%)</title><rect x="2.3237%" y="341" width="0.3701%" height="15" fill="rgb(223,4,10)" fg:x="113" fg:w="18"/><text x="2.5737%" y="351.50"></text></g><g><title>ray_tracer`alloc::raw_vec::finish_grow (18 samples, 0.37%)</title><rect x="2.3237%" y="325" width="0.3701%" height="15" fill="rgb(234,103,6)" fg:x="113" fg:w="18"/><text x="2.5737%" y="335.50"></text></g><g><title>ntdll`RtlReAllocateHeap (18 samples, 0.37%)</title><rect x="2.3237%" y="309" width="0.3701%" height="15" fill="rgb(227,97,0)" fg:x="113" fg:w="18"/><text x="2.5737%" y="319.50"></text></g><g><title>ntdll`RtlReAllocateHeap (18 samples, 0.37%)</title><rect x="2.3237%" y="293" width="0.3701%" height="15" fill="rgb(234,150,53)" fg:x="113" fg:w="18"/><text x="2.5737%" y="303.50"></text></g><g><title>ntdll`RtlReAllocateHeap (18 samples, 0.37%)</title><rect x="2.3237%" y="277" width="0.3701%" height="15" fill="rgb(228,201,54)" fg:x="113" fg:w="18"/><text x="2.5737%" y="287.50"></text></g><g><title>ntdll`RtlMoveMemory (14 samples, 0.29%)</title><rect x="2.4059%" y="261" width="0.2879%" height="15" fill="rgb(222,22,37)" fg:x="117" fg:w="14"/><text x="2.6559%" y="271.50"></text></g><g><title>ray_tracer`alloc::vec::spec_from_iter::impl$0::from_iter&lt;ray_tracer::rendering::ray::Ray,core::iter::adapters::filter::Filter&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter (461 samples, 9.48%)</title><rect x="1.9124%" y="357" width="9.4797%" height="15" fill="rgb(237,53,32)" fg:x="93" fg:w="461"/><text x="2.1624%" y="367.50">ray_tracer`all..</text></g><g><title>ray_tracer`ray_tracer::rendering::ray::Ray::intersection (423 samples, 8.70%)</title><rect x="2.6938%" y="341" width="8.6983%" height="15" fill="rgb(233,25,53)" fg:x="131" fg:w="423"/><text x="2.9438%" y="351.50">ray_tracer`r..</text></g><g><title>ray_tracer`ray_tracer::math::matrix::Matrix4x4::inverse (239 samples, 4.91%)</title><rect x="6.4775%" y="325" width="4.9147%" height="15" fill="rgb(210,40,34)" fg:x="315" fg:w="239"/><text x="6.7275%" y="335.50">ray_tr..</text></g><g><title>ray_tracer`core::array::drain::drain_array_with&lt;f32,core::ops::try_trait::NeverShortCircuit&lt;array$&lt;f32,3&gt; &gt;,3,core::array::impl$23::try_map::closure_env$0&lt;f32,3,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;f32,f32,ray_tracer::rendering::color::impl$3::mul::closure_env$0&gt;,core::ops::try_trait::NeverShortCircuit (10 samples, 0.21%)</title><rect x="11.3921%" y="357" width="0.2056%" height="15" fill="rgb(241,220,44)" fg:x="554" fg:w="10"/><text x="11.6421%" y="367.50"></text></g><g><title>ray_tracer`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$ (25 samples, 0.51%)</title><rect x="11.5978%" y="357" width="0.5141%" height="15" fill="rgb(235,28,35)" fg:x="564" fg:w="25"/><text x="11.8478%" y="367.50"></text></g><g><title>ray_tracer`ray_tracer::rendering::canvas::impl$2::hash (10 samples, 0.21%)</title><rect x="11.9062%" y="341" width="0.2056%" height="15" fill="rgb(210,56,17)" fg:x="579" fg:w="10"/><text x="12.1562%" y="351.50"></text></g><g><title>ray_tracer`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$ (56 samples, 1.15%)</title><rect x="15.4020%" y="341" width="1.1516%" height="15" fill="rgb(224,130,29)" fg:x="749" fg:w="56"/><text x="15.6520%" y="351.50"></text></g><g><title>ray_tracer`ray_tracer::rendering::canvas::impl$2::hash (16 samples, 0.33%)</title><rect x="16.2246%" y="325" width="0.3290%" height="15" fill="rgb(235,212,8)" fg:x="789" fg:w="16"/><text x="16.4746%" y="335.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.02%)</title><rect x="26.4240%" y="261" width="0.0206%" height="15" fill="rgb(223,33,50)" fg:x="1285" fg:w="1"/><text x="26.6740%" y="271.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.06%)</title><rect x="26.4035%" y="309" width="0.0617%" height="15" fill="rgb(219,149,13)" fg:x="1284" fg:w="3"/><text x="26.6535%" y="319.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.04%)</title><rect x="26.4240%" y="293" width="0.0411%" height="15" fill="rgb(250,156,29)" fg:x="1285" fg:w="2"/><text x="26.6740%" y="303.50"></text></g><g><title>ntdll`TpCallbackSendPendingAlpcMessage (2 samples, 0.04%)</title><rect x="26.4240%" y="277" width="0.0411%" height="15" fill="rgb(216,193,19)" fg:x="1285" fg:w="2"/><text x="26.6740%" y="287.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.02%)</title><rect x="26.4446%" y="261" width="0.0206%" height="15" fill="rgb(216,135,14)" fg:x="1286" fg:w="1"/><text x="26.6946%" y="271.50"></text></g><g><title>ntdll`ZwFreeVirtualMemory (1 samples, 0.02%)</title><rect x="26.4446%" y="245" width="0.0206%" height="15" fill="rgb(241,47,5)" fg:x="1286" fg:w="1"/><text x="26.6946%" y="255.50"></text></g><g><title>ntdll`RtlFreeHeap (4 samples, 0.08%)</title><rect x="26.4651%" y="309" width="0.0823%" height="15" fill="rgb(233,42,35)" fg:x="1287" fg:w="4"/><text x="26.7151%" y="319.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (4 samples, 0.08%)</title><rect x="26.4651%" y="293" width="0.0823%" height="15" fill="rgb(231,13,6)" fg:x="1287" fg:w="4"/><text x="26.7151%" y="303.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (4 samples, 0.08%)</title><rect x="26.4651%" y="277" width="0.0823%" height="15" fill="rgb(207,181,40)" fg:x="1287" fg:w="4"/><text x="26.7151%" y="287.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (4 samples, 0.08%)</title><rect x="26.4651%" y="261" width="0.0823%" height="15" fill="rgb(254,173,49)" fg:x="1287" fg:w="4"/><text x="26.7151%" y="271.50"></text></g><g><title>ntdll`ZwFreeVirtualMemory (4 samples, 0.08%)</title><rect x="26.4651%" y="245" width="0.0823%" height="15" fill="rgb(221,1,38)" fg:x="1287" fg:w="4"/><text x="26.7151%" y="255.50"></text></g><g><title>ray_tracer`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$ (151 samples, 3.11%)</title><rect x="26.5474%" y="309" width="3.1051%" height="15" fill="rgb(206,124,46)" fg:x="1291" fg:w="151"/><text x="26.7974%" y="319.50">ray..</text></g><g><title>ray_tracer`ray_tracer::rendering::canvas::impl$2::hash (29 samples, 0.60%)</title><rect x="29.0561%" y="293" width="0.5963%" height="15" fill="rgb(249,21,11)" fg:x="1413" fg:w="29"/><text x="29.3061%" y="303.50"></text></g><g><title>ray_tracer`hashbrown::raw::RawTable&lt;tuple$&lt;ray_tracer::rendering::canvas::Coordinate,ray_tracer::rendering::color::Color&gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;ray_tracer::rendering::canvas::Coordinate,ray_tracer::rendering::color::Color&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0 (641 samples, 13.18%)</title><rect x="16.5536%" y="341" width="13.1812%" height="15" fill="rgb(222,201,40)" fg:x="805" fg:w="641"/><text x="16.8036%" y="351.50">ray_tracer`hashbrown..</text></g><g><title>ray_tracer`hashbrown::raw::RawTable&lt;tuple$&lt;ray_tracer::rendering::canvas::Coordinate,ray_tracer::rendering::color::Color&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;ray_tracer::rendering::canvas::Coordinate,ray_tracer::rendering::color::Color&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0 (395 samples, 8.12%)</title><rect x="21.6122%" y="325" width="8.1226%" height="15" fill="rgb(235,61,29)" fg:x="1051" fg:w="395"/><text x="21.8622%" y="335.50">ray_tracer`..</text></g><g><title>vcruntime140`memset (4 samples, 0.08%)</title><rect x="29.6525%" y="309" width="0.0823%" height="15" fill="rgb(219,207,3)" fg:x="1442" fg:w="4"/><text x="29.9025%" y="319.50"></text></g><g><title>ntdll`LdrGetDllHandleByMapping (1 samples, 0.02%)</title><rect x="29.7347%" y="165" width="0.0206%" height="15" fill="rgb(222,56,46)" fg:x="1446" fg:w="1"/><text x="29.9847%" y="175.50"></text></g><g><title>ntdll`LdrAddRefDll (1 samples, 0.02%)</title><rect x="29.7347%" y="149" width="0.0206%" height="15" fill="rgb(239,76,54)" fg:x="1446" fg:w="1"/><text x="29.9847%" y="159.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.02%)</title><rect x="29.7347%" y="133" width="0.0206%" height="15" fill="rgb(231,124,27)" fg:x="1446" fg:w="1"/><text x="29.9847%" y="143.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.02%)</title><rect x="29.7347%" y="117" width="0.0206%" height="15" fill="rgb(249,195,6)" fg:x="1446" fg:w="1"/><text x="29.9847%" y="127.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.02%)</title><rect x="29.7347%" y="101" width="0.0206%" height="15" fill="rgb(237,174,47)" fg:x="1446" fg:w="1"/><text x="29.9847%" y="111.50"></text></g><g><title>ray_tracer`ray_tracer::rendering::canvas::Canvas::new (859 samples, 17.66%)</title><rect x="12.1119%" y="357" width="17.6640%" height="15" fill="rgb(206,201,31)" fg:x="589" fg:w="859"/><text x="12.3619%" y="367.50">ray_tracer`ray_tracer::rend..</text></g><g><title>ray_tracer`std::collections::hash::map::impl$82::new::KEYS::__getit (2 samples, 0.04%)</title><rect x="29.7347%" y="341" width="0.0411%" height="15" fill="rgb(231,57,52)" fg:x="1446" fg:w="2"/><text x="29.9847%" y="351.50"></text></g><g><title>ray_tracer`std::sys::common::thread_local::fast_local::fast::Key::try_initialize&lt;core::cell::Cell&lt;tuple$ (2 samples, 0.04%)</title><rect x="29.7347%" y="325" width="0.0411%" height="15" fill="rgb(248,177,22)" fg:x="1446" fg:w="2"/><text x="29.9847%" y="335.50"></text></g><g><title>bcrypt`BCryptGenRandom (2 samples, 0.04%)</title><rect x="29.7347%" y="309" width="0.0411%" height="15" fill="rgb(215,211,37)" fg:x="1446" fg:w="2"/><text x="29.9847%" y="319.50"></text></g><g><title>bcrypt`BCryptGenRandom (2 samples, 0.04%)</title><rect x="29.7347%" y="293" width="0.0411%" height="15" fill="rgb(241,128,51)" fg:x="1446" fg:w="2"/><text x="29.9847%" y="303.50"></text></g><g><title>bcrypt`BCryptOpenAlgorithmProvider (2 samples, 0.04%)</title><rect x="29.7347%" y="277" width="0.0411%" height="15" fill="rgb(227,165,31)" fg:x="1446" fg:w="2"/><text x="29.9847%" y="287.50"></text></g><g><title>bcrypt`BCryptDecrypt (2 samples, 0.04%)</title><rect x="29.7347%" y="261" width="0.0411%" height="15" fill="rgb(228,167,24)" fg:x="1446" fg:w="2"/><text x="29.9847%" y="271.50"></text></g><g><title>bcrypt`BCryptDecrypt (2 samples, 0.04%)</title><rect x="29.7347%" y="245" width="0.0411%" height="15" fill="rgb(228,143,12)" fg:x="1446" fg:w="2"/><text x="29.9847%" y="255.50"></text></g><g><title>KernelBase`LoadLibraryExW (2 samples, 0.04%)</title><rect x="29.7347%" y="229" width="0.0411%" height="15" fill="rgb(249,149,8)" fg:x="1446" fg:w="2"/><text x="29.9847%" y="239.50"></text></g><g><title>ntdll`LdrLoadDll (2 samples, 0.04%)</title><rect x="29.7347%" y="213" width="0.0411%" height="15" fill="rgb(243,35,44)" fg:x="1446" fg:w="2"/><text x="29.9847%" y="223.50"></text></g><g><title>ntdll`RtlUnicodeToCustomCPN (2 samples, 0.04%)</title><rect x="29.7347%" y="197" width="0.0411%" height="15" fill="rgb(246,89,9)" fg:x="1446" fg:w="2"/><text x="29.9847%" y="207.50"></text></g><g><title>ntdll`RtlImageRvaToSection (2 samples, 0.04%)</title><rect x="29.7347%" y="181" width="0.0411%" height="15" fill="rgb(233,213,13)" fg:x="1446" fg:w="2"/><text x="29.9847%" y="191.50"></text></g><g><title>ntdll`RtlCopyUnicodeString (1 samples, 0.02%)</title><rect x="29.7553%" y="165" width="0.0206%" height="15" fill="rgb(233,141,41)" fg:x="1447" fg:w="1"/><text x="30.0053%" y="175.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (1 samples, 0.02%)</title><rect x="29.7553%" y="149" width="0.0206%" height="15" fill="rgb(239,167,4)" fg:x="1447" fg:w="1"/><text x="30.0053%" y="159.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (1 samples, 0.02%)</title><rect x="29.7553%" y="133" width="0.0206%" height="15" fill="rgb(209,217,16)" fg:x="1447" fg:w="1"/><text x="30.0053%" y="143.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (1 samples, 0.02%)</title><rect x="29.7553%" y="117" width="0.0206%" height="15" fill="rgb(219,88,35)" fg:x="1447" fg:w="1"/><text x="30.0053%" y="127.50"></text></g><g><title>bcryptprimitives`GetRngInterface (1 samples, 0.02%)</title><rect x="29.7553%" y="101" width="0.0206%" height="15" fill="rgb(220,193,23)" fg:x="1447" fg:w="1"/><text x="30.0053%" y="111.50"></text></g><g><title>bcryptprimitives`ProcessPrngGuid (1 samples, 0.02%)</title><rect x="29.7553%" y="85" width="0.0206%" height="15" fill="rgb(230,90,52)" fg:x="1447" fg:w="1"/><text x="30.0053%" y="95.50"></text></g><g><title>bcryptprimitives`ProcessPrngGuid (1 samples, 0.02%)</title><rect x="29.7553%" y="69" width="0.0206%" height="15" fill="rgb(252,106,19)" fg:x="1447" fg:w="1"/><text x="30.0053%" y="79.50"></text></g><g><title>bcryptprimitives`ProcessPrngGuid (1 samples, 0.02%)</title><rect x="29.7553%" y="53" width="0.0206%" height="15" fill="rgb(206,74,20)" fg:x="1447" fg:w="1"/><text x="30.0053%" y="63.50"></text></g><g><title>ntdll`ZwOpenKey (1 samples, 0.02%)</title><rect x="29.7553%" y="37" width="0.0206%" height="15" fill="rgb(230,138,44)" fg:x="1447" fg:w="1"/><text x="30.0053%" y="47.50"></text></g><g><title>kernel32`HeapFree (3 samples, 0.06%)</title><rect x="54.8016%" y="341" width="0.0617%" height="15" fill="rgb(235,182,43)" fg:x="2665" fg:w="3"/><text x="55.0516%" y="351.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (4 samples, 0.08%)</title><rect x="56.4672%" y="309" width="0.0823%" height="15" fill="rgb(242,16,51)" fg:x="2746" fg:w="4"/><text x="56.7172%" y="319.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (3 samples, 0.06%)</title><rect x="56.4878%" y="293" width="0.0617%" height="15" fill="rgb(248,9,4)" fg:x="2747" fg:w="3"/><text x="56.7378%" y="303.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.04%)</title><rect x="56.5083%" y="277" width="0.0411%" height="15" fill="rgb(210,31,22)" fg:x="2748" fg:w="2"/><text x="56.7583%" y="287.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.04%)</title><rect x="56.5083%" y="261" width="0.0411%" height="15" fill="rgb(239,54,39)" fg:x="2748" fg:w="2"/><text x="56.7583%" y="271.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.04%)</title><rect x="56.5083%" y="245" width="0.0411%" height="15" fill="rgb(230,99,41)" fg:x="2748" fg:w="2"/><text x="56.7583%" y="255.50"></text></g><g><title>ntdll`ZwFreeVirtualMemory (2 samples, 0.04%)</title><rect x="56.5083%" y="229" width="0.0411%" height="15" fill="rgb(253,106,12)" fg:x="2748" fg:w="2"/><text x="56.7583%" y="239.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (46 samples, 0.95%)</title><rect x="55.6858%" y="325" width="0.9459%" height="15" fill="rgb(213,46,41)" fg:x="2708" fg:w="46"/><text x="55.9358%" y="335.50"></text></g><g><title>ntdll`RtlFreeHeap (4 samples, 0.08%)</title><rect x="56.5495%" y="309" width="0.0823%" height="15" fill="rgb(215,133,35)" fg:x="2750" fg:w="4"/><text x="56.7995%" y="319.50"></text></g><g><title>ntdll`RtlFreeHeap (197 samples, 4.05%)</title><rect x="54.8633%" y="341" width="4.0510%" height="15" fill="rgb(213,28,5)" fg:x="2668" fg:w="197"/><text x="55.1133%" y="351.50">ntdl..</text></g><g><title>ntdll`RtlMoveMemory (111 samples, 2.28%)</title><rect x="56.6317%" y="325" width="2.2825%" height="15" fill="rgb(215,77,49)" fg:x="2754" fg:w="111"/><text x="56.8817%" y="335.50">n..</text></g><g><title>ray_tracer`_rust_dealloc (3 samples, 0.06%)</title><rect x="58.9143%" y="341" width="0.0617%" height="15" fill="rgb(248,100,22)" fg:x="2865" fg:w="3"/><text x="59.1643%" y="351.50"></text></g><g><title>ray_tracer`memcpy (2 samples, 0.04%)</title><rect x="62.2455%" y="293" width="0.0411%" height="15" fill="rgb(208,67,9)" fg:x="3027" fg:w="2"/><text x="62.4955%" y="303.50"></text></g><g><title>ray_tracer`core::fmt::impl$0::write_str (66 samples, 1.36%)</title><rect x="61.4024%" y="309" width="1.3572%" height="15" fill="rgb(219,133,21)" fg:x="2986" fg:w="66"/><text x="61.6524%" y="319.50"></text></g><g><title>vcruntime140`memcpy (23 samples, 0.47%)</title><rect x="62.2867%" y="293" width="0.4730%" height="15" fill="rgb(246,46,29)" fg:x="3029" fg:w="23"/><text x="62.5367%" y="303.50"></text></g><g><title>ray_tracer`core::fmt::Formatter::pad_integral (100 samples, 2.06%)</title><rect x="64.3841%" y="293" width="2.0563%" height="15" fill="rgb(246,185,52)" fg:x="3131" fg:w="100"/><text x="64.6341%" y="303.50">r..</text></g><g><title>ray_tracer`core::fmt::impl$9::pad_integral::write_prefix (25 samples, 0.51%)</title><rect x="65.9264%" y="277" width="0.5141%" height="15" fill="rgb(252,136,11)" fg:x="3206" fg:w="25"/><text x="66.1764%" y="287.50"></text></g><g><title>ntdll`RtlAllocateHeap (19 samples, 0.39%)</title><rect x="71.7458%" y="213" width="0.3907%" height="15" fill="rgb(219,138,53)" fg:x="3489" fg:w="19"/><text x="71.9958%" y="223.50"></text></g><g><title>ntdll`RtlAllocateHeap (230 samples, 4.73%)</title><rect x="68.3529%" y="245" width="4.7296%" height="15" fill="rgb(211,51,23)" fg:x="3324" fg:w="230"/><text x="68.6029%" y="255.50">ntdll`..</text></g><g><title>ntdll`RtlAllocateHeap (179 samples, 3.68%)</title><rect x="69.4016%" y="229" width="3.6809%" height="15" fill="rgb(247,221,28)" fg:x="3375" fg:w="179"/><text x="69.6516%" y="239.50">ntdl..</text></g><g><title>ntdll`RtlUnhandledExceptionFilter (46 samples, 0.95%)</title><rect x="72.1365%" y="213" width="0.9459%" height="15" fill="rgb(251,222,45)" fg:x="3508" fg:w="46"/><text x="72.3865%" y="223.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.04%)</title><rect x="74.7275%" y="165" width="0.0411%" height="15" fill="rgb(217,162,53)" fg:x="3634" fg:w="2"/><text x="74.9775%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (59 samples, 1.21%)</title><rect x="73.8022%" y="197" width="1.2132%" height="15" fill="rgb(229,93,14)" fg:x="3589" fg:w="59"/><text x="74.0522%" y="207.50"></text></g><g><title>ntdll`RtlAllocateHeap (44 samples, 0.90%)</title><rect x="74.1106%" y="181" width="0.9048%" height="15" fill="rgb(209,67,49)" fg:x="3604" fg:w="44"/><text x="74.3606%" y="191.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (12 samples, 0.25%)</title><rect x="74.7687%" y="165" width="0.2468%" height="15" fill="rgb(213,87,29)" fg:x="3636" fg:w="12"/><text x="75.0187%" y="175.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (11 samples, 0.23%)</title><rect x="75.0771%" y="181" width="0.2262%" height="15" fill="rgb(205,151,52)" fg:x="3651" fg:w="11"/><text x="75.3271%" y="191.50"></text></g><g><title>ntdll`RtlReAllocateHeap (136 samples, 2.80%)</title><rect x="73.4115%" y="213" width="2.7966%" height="15" fill="rgb(253,215,39)" fg:x="3570" fg:w="136"/><text x="73.6615%" y="223.50">nt..</text></g><g><title>ntdll`RtlFreeHeap (58 samples, 1.19%)</title><rect x="75.0154%" y="197" width="1.1927%" height="15" fill="rgb(221,220,41)" fg:x="3648" fg:w="58"/><text x="75.2654%" y="207.50"></text></g><g><title>ntdll`RtlMoveMemory (44 samples, 0.90%)</title><rect x="75.3033%" y="181" width="0.9048%" height="15" fill="rgb(218,133,21)" fg:x="3662" fg:w="44"/><text x="75.5533%" y="191.50"></text></g><g><title>ntdll`RtlReAllocateHeap (155 samples, 3.19%)</title><rect x="73.0825%" y="245" width="3.1873%" height="15" fill="rgb(221,193,43)" fg:x="3554" fg:w="155"/><text x="73.3325%" y="255.50">ntd..</text></g><g><title>ntdll`RtlReAllocateHeap (153 samples, 3.15%)</title><rect x="73.1236%" y="229" width="3.1462%" height="15" fill="rgb(240,128,52)" fg:x="3556" fg:w="153"/><text x="73.3736%" y="239.50">ntd..</text></g><g><title>ntdll`RtlRetrieveNtUserPfn (3 samples, 0.06%)</title><rect x="76.2081%" y="213" width="0.0617%" height="15" fill="rgb(253,114,12)" fg:x="3706" fg:w="3"/><text x="76.4581%" y="223.50"></text></g><g><title>ray_tracer`std::alloc::__default_lib_allocator::__rdl_alloc (3 samples, 0.06%)</title><rect x="76.2698%" y="245" width="0.0617%" height="15" fill="rgb(215,223,47)" fg:x="3709" fg:w="3"/><text x="76.5198%" y="255.50"></text></g><g><title>ray_tracer`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle (444 samples, 9.13%)</title><rect x="67.2219%" y="277" width="9.1302%" height="15" fill="rgb(248,225,23)" fg:x="3269" fg:w="444"/><text x="67.4719%" y="287.50">ray_tracer`al..</text></g><g><title>ray_tracer`alloc::raw_vec::finish_grow (404 samples, 8.31%)</title><rect x="68.0444%" y="261" width="8.3076%" height="15" fill="rgb(250,108,0)" fg:x="3309" fg:w="404"/><text x="68.2944%" y="271.50">ray_tracer`a..</text></g><g><title>ray_tracer`std::alloc::__default_lib_allocator::__rdl_realloc (1 samples, 0.02%)</title><rect x="76.3315%" y="245" width="0.0206%" height="15" fill="rgb(228,208,7)" fg:x="3712" fg:w="1"/><text x="76.5815%" y="255.50"></text></g><g><title>ray_tracer`alloc::fmt::format::format_inner (897 samples, 18.45%)</title><rect x="58.9759%" y="341" width="18.4454%" height="15" fill="rgb(244,45,10)" fg:x="2868" fg:w="897"/><text x="59.2259%" y="351.50">ray_tracer`alloc::fmt::format..</text></g><g><title>ray_tracer`core::fmt::write (822 samples, 16.90%)</title><rect x="60.5182%" y="325" width="16.9031%" height="15" fill="rgb(207,125,25)" fg:x="2943" fg:w="822"/><text x="60.7682%" y="335.50">ray_tracer`core::fmt::write</text></g><g><title>ray_tracer`core::fmt::num::imp::impl$1::fmt (713 samples, 14.66%)</title><rect x="62.7596%" y="309" width="14.6617%" height="15" fill="rgb(210,195,18)" fg:x="3052" fg:w="713"/><text x="63.0096%" y="319.50">ray_tracer`core::fmt::..</text></g><g><title>ray_tracer`core::fmt::impl$0::write_str (534 samples, 10.98%)</title><rect x="66.4405%" y="293" width="10.9809%" height="15" fill="rgb(249,80,12)" fg:x="3231" fg:w="534"/><text x="66.6905%" y="303.50">ray_tracer`core:..</text></g><g><title>vcruntime140`memcpy (52 samples, 1.07%)</title><rect x="76.3520%" y="277" width="1.0693%" height="15" fill="rgb(221,65,9)" fg:x="3713" fg:w="52"/><text x="76.6020%" y="287.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.02%)</title><rect x="77.4419%" y="309" width="0.0206%" height="15" fill="rgb(235,49,36)" fg:x="3766" fg:w="1"/><text x="77.6919%" y="319.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.02%)</title><rect x="77.4419%" y="293" width="0.0206%" height="15" fill="rgb(225,32,20)" fg:x="3766" fg:w="1"/><text x="77.6919%" y="303.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (1 samples, 0.02%)</title><rect x="77.4419%" y="277" width="0.0206%" height="15" fill="rgb(215,141,46)" fg:x="3766" fg:w="1"/><text x="77.6919%" y="287.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.04%)</title><rect x="77.5036%" y="261" width="0.0411%" height="15" fill="rgb(250,160,47)" fg:x="3769" fg:w="2"/><text x="77.7536%" y="271.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.04%)</title><rect x="77.5036%" y="245" width="0.0411%" height="15" fill="rgb(216,222,40)" fg:x="3769" fg:w="2"/><text x="77.7536%" y="255.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (2 samples, 0.04%)</title><rect x="77.5036%" y="229" width="0.0411%" height="15" fill="rgb(234,217,39)" fg:x="3769" fg:w="2"/><text x="77.7536%" y="239.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (2 samples, 0.04%)</title><rect x="77.5447%" y="245" width="0.0411%" height="15" fill="rgb(207,178,40)" fg:x="3771" fg:w="2"/><text x="77.7947%" y="255.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (2 samples, 0.04%)</title><rect x="77.5447%" y="229" width="0.0411%" height="15" fill="rgb(221,136,13)" fg:x="3771" fg:w="2"/><text x="77.7947%" y="239.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.04%)</title><rect x="77.5447%" y="213" width="0.0411%" height="15" fill="rgb(249,199,10)" fg:x="3771" fg:w="2"/><text x="77.7947%" y="223.50"></text></g><g><title>ntdll`ZwFreeVirtualMemory (2 samples, 0.04%)</title><rect x="77.5447%" y="197" width="0.0411%" height="15" fill="rgb(249,222,13)" fg:x="3771" fg:w="2"/><text x="77.7947%" y="207.50"></text></g><g><title>ntdll`RtlFreeHeap (4 samples, 0.08%)</title><rect x="77.5447%" y="261" width="0.0823%" height="15" fill="rgb(244,185,38)" fg:x="3771" fg:w="4"/><text x="77.7947%" y="271.50"></text></g><g><title>ntdll`RtlMoveMemory (2 samples, 0.04%)</title><rect x="77.5859%" y="245" width="0.0411%" height="15" fill="rgb(236,202,9)" fg:x="3773" fg:w="2"/><text x="77.8359%" y="255.50"></text></g><g><title>ntdll`RtlMoveMemory (14 samples, 0.29%)</title><rect x="77.6270%" y="261" width="0.2879%" height="15" fill="rgb(250,229,37)" fg:x="3775" fg:w="14"/><text x="77.8770%" y="271.50"></text></g><g><title>ntdll`RtlReAllocateHeap (25 samples, 0.51%)</title><rect x="77.4625%" y="309" width="0.5141%" height="15" fill="rgb(206,174,23)" fg:x="3767" fg:w="25"/><text x="77.7125%" y="319.50"></text></g><g><title>ntdll`RtlReAllocateHeap (25 samples, 0.51%)</title><rect x="77.4625%" y="293" width="0.5141%" height="15" fill="rgb(211,33,43)" fg:x="3767" fg:w="25"/><text x="77.7125%" y="303.50"></text></g><g><title>ntdll`RtlReAllocateHeap (24 samples, 0.49%)</title><rect x="77.4830%" y="277" width="0.4935%" height="15" fill="rgb(245,58,50)" fg:x="3768" fg:w="24"/><text x="77.7330%" y="287.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (3 samples, 0.06%)</title><rect x="77.9149%" y="261" width="0.0617%" height="15" fill="rgb(244,68,36)" fg:x="3789" fg:w="3"/><text x="78.1649%" y="271.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.04%)</title><rect x="77.9354%" y="245" width="0.0411%" height="15" fill="rgb(232,229,15)" fg:x="3790" fg:w="2"/><text x="78.1854%" y="255.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.02%)</title><rect x="77.9560%" y="229" width="0.0206%" height="15" fill="rgb(254,30,23)" fg:x="3791" fg:w="1"/><text x="78.2060%" y="239.50"></text></g><g><title>ray_tracer`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle (28 samples, 0.58%)</title><rect x="77.4213%" y="341" width="0.5758%" height="15" fill="rgb(235,160,14)" fg:x="3765" fg:w="28"/><text x="77.6713%" y="351.50"></text></g><g><title>ray_tracer`alloc::raw_vec::finish_grow (28 samples, 0.58%)</title><rect x="77.4213%" y="325" width="0.5758%" height="15" fill="rgb(212,155,44)" fg:x="3765" fg:w="28"/><text x="77.6713%" y="335.50"></text></g><g><title>ray_tracer`std::alloc::__default_lib_allocator::__rdl_realloc (1 samples, 0.02%)</title><rect x="77.9766%" y="309" width="0.0206%" height="15" fill="rgb(226,2,50)" fg:x="3792" fg:w="1"/><text x="78.2266%" y="319.50"></text></g><g><title>ray_tracer`roundf (2 samples, 0.04%)</title><rect x="79.5188%" y="325" width="0.0411%" height="15" fill="rgb(234,177,6)" fg:x="3867" fg:w="2"/><text x="79.7688%" y="335.50"></text></g><g><title>ray_tracer`core::array::drain::drain_array_with&lt;f32,core::ops::try_trait::NeverShortCircuit&lt;array$&lt;u8,3&gt; &gt;,3,core::array::impl$23::try_map::closure_env$0&lt;f32,3,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;u8,f32,ray_tracer::rendering::color::impl$0::to_rgb::closure_env$0&gt;,core::ops::try_trait::NeverShortCircuit (262 samples, 5.39%)</title><rect x="77.9971%" y="341" width="5.3876%" height="15" fill="rgb(217,24,9)" fg:x="3793" fg:w="262"/><text x="78.2471%" y="351.50">ray_tra..</text></g><g><title>ucrtbase`roundf (186 samples, 3.82%)</title><rect x="79.5599%" y="325" width="3.8248%" height="15" fill="rgb(220,13,46)" fg:x="3869" fg:w="186"/><text x="79.8099%" y="335.50">ucrt..</text></g><g><title>ucrtbase`fd_int (115 samples, 2.36%)</title><rect x="81.0199%" y="309" width="2.3648%" height="15" fill="rgb(239,221,27)" fg:x="3940" fg:w="115"/><text x="81.2699%" y="319.50">uc..</text></g><g><title>ray_tracer`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$ (138 samples, 2.84%)</title><rect x="83.3847%" y="341" width="2.8378%" height="15" fill="rgb(222,198,25)" fg:x="4055" fg:w="138"/><text x="83.6347%" y="351.50">ra..</text></g><g><title>ray_tracer`ray_tracer::rendering::canvas::impl$2::hash (18 samples, 0.37%)</title><rect x="85.8524%" y="325" width="0.3701%" height="15" fill="rgb(211,99,13)" fg:x="4175" fg:w="18"/><text x="86.1024%" y="335.50"></text></g><g><title>ray_tracer`std::alloc::__default_lib_allocator::__rdl_dealloc (11 samples, 0.23%)</title><rect x="86.2225%" y="341" width="0.2262%" height="15" fill="rgb(232,111,31)" fg:x="4193" fg:w="11"/><text x="86.4725%" y="351.50"></text></g><g><title>ray_tracer`ray_tracer::rendering::canvas::Canvas::to_ppm (2,782 samples, 57.21%)</title><rect x="29.7759%" y="357" width="57.2075%" height="15" fill="rgb(245,82,37)" fg:x="1448" fg:w="2782"/><text x="30.0259%" y="367.50">ray_tracer`ray_tracer::rendering::canvas::Canvas::to_ppm</text></g><g><title>vcruntime140`memcpy (26 samples, 0.53%)</title><rect x="86.4487%" y="341" width="0.5346%" height="15" fill="rgb(227,149,46)" fg:x="4204" fg:w="26"/><text x="86.6987%" y="351.50"></text></g><g><title>ray_tracer`core::array::drain::drain_array_with&lt;f32,array$&lt;tuple$&lt;f32,f32&gt;,3&gt;,3,core::array::impl$23::zip::closure_env$0 (17 samples, 0.35%)</title><rect x="89.1219%" y="341" width="0.3496%" height="15" fill="rgb(218,36,50)" fg:x="4334" fg:w="17"/><text x="89.3719%" y="351.50"></text></g><g><title>ray_tracer`core::array::drain::drain_array_with&lt;f32,core::ops::try_trait::NeverShortCircuit&lt;array$&lt;f32,3&gt; &gt;,3,core::array::impl$23::try_map::closure_env$0&lt;f32,3,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;f32,f32,ray_tracer::math::vector::impl$0::negate::closure_env$0&gt;,core::ops::try_trait::NeverShortCircuit (1 samples, 0.02%)</title><rect x="89.4715%" y="341" width="0.0206%" height="15" fill="rgb(226,80,48)" fg:x="4351" fg:w="1"/><text x="89.7215%" y="351.50"></text></g><g><title>ray_tracer`core::array::drain::drain_array_with&lt;f32,core::ops::try_trait::NeverShortCircuit&lt;array$&lt;f32,3&gt; &gt;,3,core::array::impl$23::try_map::closure_env$0&lt;f32,3,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;f32,f32,ray_tracer::math::vector::impl$0::normalize::closure_env$0&gt;,core::ops::try_trait::NeverShortCircuit (4 samples, 0.08%)</title><rect x="89.4921%" y="341" width="0.0823%" height="15" fill="rgb(238,224,15)" fg:x="4352" fg:w="4"/><text x="89.7421%" y="351.50"></text></g><g><title>ray_tracer`core::array::drain::drain_array_with&lt;f32,core::ops::try_trait::NeverShortCircuit&lt;array$&lt;f32,3&gt; &gt;,3,core::array::impl$23::try_map::closure_env$0&lt;f32,3,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;f32,f32,ray_tracer::rendering::color::impl$3::mul::closure_env$0&gt;,core::ops::try_trait::NeverShortCircuit (28 samples, 0.58%)</title><rect x="89.5743%" y="341" width="0.5758%" height="15" fill="rgb(241,136,10)" fg:x="4356" fg:w="28"/><text x="89.8243%" y="351.50"></text></g><g><title>ray_tracer`core::array::drain::drain_array_with&lt;tuple$&lt;f32,f32&gt;,core::ops::try_trait::NeverShortCircuit&lt;array$&lt;f32,3&gt; &gt;,3,core::array::impl$23::try_map::closure_env$0&lt;tuple$&lt;f32,f32&gt;,3,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;f32,tuple$&lt;f32,f32&gt;,ray_tracer::rendering::color::impl$1::add::closure_env$0&gt;,core::ops::try_trait::NeverShortCircuit (12 samples, 0.25%)</title><rect x="90.1501%" y="341" width="0.2468%" height="15" fill="rgb(208,32,45)" fg:x="4384" fg:w="12"/><text x="90.4001%" y="351.50"></text></g><g><title>ray_tracer`core::array::drain::drain_array_with&lt;tuple$&lt;f32,f32&gt;,core::ops::try_trait::NeverShortCircuit&lt;array$&lt;f32,3&gt; &gt;,3,core::array::impl$23::try_map::closure_env$0&lt;tuple$&lt;f32,f32&gt;,3,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;f32,tuple$&lt;f32,f32&gt;,ray_tracer::rendering::color::impl$4::mul::closure_env$0&gt;,core::ops::try_trait::NeverShortCircuit (11 samples, 0.23%)</title><rect x="90.3969%" y="341" width="0.2262%" height="15" fill="rgb(207,135,9)" fg:x="4396" fg:w="11"/><text x="90.6469%" y="351.50"></text></g><g><title>ucrtbase`_report_gsfailure (2 samples, 0.04%)</title><rect x="91.1166%" y="293" width="0.0411%" height="15" fill="rgb(206,86,44)" fg:x="4431" fg:w="2"/><text x="91.3666%" y="303.50"></text></g><g><title>ucrtbase`fminl (5 samples, 0.10%)</title><rect x="91.1577%" y="293" width="0.1028%" height="15" fill="rgb(245,177,15)" fg:x="4433" fg:w="5"/><text x="91.4077%" y="303.50"></text></g><g><title>ucrtbase`o_free (3 samples, 0.06%)</title><rect x="91.1988%" y="277" width="0.0617%" height="15" fill="rgb(206,64,50)" fg:x="4435" fg:w="3"/><text x="91.4488%" y="287.50"></text></g><g><title>KernelBase`FlsGetValue (3 samples, 0.06%)</title><rect x="91.1988%" y="261" width="0.0617%" height="15" fill="rgb(234,36,40)" fg:x="4435" fg:w="3"/><text x="91.4488%" y="271.50"></text></g><g><title>ntdll`RtlFlsGetValue (2 samples, 0.04%)</title><rect x="91.2194%" y="245" width="0.0411%" height="15" fill="rgb(213,64,8)" fg:x="4436" fg:w="2"/><text x="91.4694%" y="255.50"></text></g><g><title>ucrtbase`fmodf (19 samples, 0.39%)</title><rect x="91.2605%" y="293" width="0.3907%" height="15" fill="rgb(210,75,36)" fg:x="4438" fg:w="19"/><text x="91.5105%" y="303.50"></text></g><g><title>ucrtbase`fmod (16 samples, 0.33%)</title><rect x="91.3222%" y="277" width="0.3290%" height="15" fill="rgb(229,88,21)" fg:x="4441" fg:w="16"/><text x="91.5722%" y="287.50"></text></g><g><title>ucrtbase`fmod (3 samples, 0.06%)</title><rect x="91.6512%" y="277" width="0.0617%" height="15" fill="rgb(252,204,47)" fg:x="4457" fg:w="3"/><text x="91.9012%" y="287.50"></text></g><g><title>ray_tracer`ray_tracer::rendering::lighting (241 samples, 4.96%)</title><rect x="86.9833%" y="357" width="4.9558%" height="15" fill="rgb(208,77,27)" fg:x="4230" fg:w="241"/><text x="87.2333%" y="367.50">ray_tr..</text></g><g><title>ucrtbase`powf (64 samples, 1.32%)</title><rect x="90.6231%" y="341" width="1.3161%" height="15" fill="rgb(221,76,26)" fg:x="4407" fg:w="64"/><text x="90.8731%" y="351.50"></text></g><g><title>ucrtbase`log2 (46 samples, 0.95%)</title><rect x="90.9932%" y="325" width="0.9459%" height="15" fill="rgb(225,139,18)" fg:x="4425" fg:w="46"/><text x="91.2432%" y="335.50"></text></g><g><title>ucrtbase`hypotf (41 samples, 0.84%)</title><rect x="91.0960%" y="309" width="0.8431%" height="15" fill="rgb(230,137,11)" fg:x="4430" fg:w="41"/><text x="91.3460%" y="319.50"></text></g><g><title>ucrtbase`hypotf (14 samples, 0.29%)</title><rect x="91.6512%" y="293" width="0.2879%" height="15" fill="rgb(212,28,1)" fg:x="4457" fg:w="14"/><text x="91.9012%" y="303.50"></text></g><g><title>ucrtbase`fmodf (11 samples, 0.23%)</title><rect x="91.7129%" y="277" width="0.2262%" height="15" fill="rgb(248,164,17)" fg:x="4460" fg:w="11"/><text x="91.9629%" y="287.50"></text></g><g><title>ucrtbase`fmod (9 samples, 0.19%)</title><rect x="91.7541%" y="261" width="0.1851%" height="15" fill="rgb(222,171,42)" fg:x="4462" fg:w="9"/><text x="92.0041%" y="271.50"></text></g><g><title>ray_tracer`core::array::drain::drain_array_with&lt;f32,core::ops::try_trait::NeverShortCircuit&lt;array$&lt;f32,3&gt; &gt;,3,core::array::impl$23::try_map::closure_env$0&lt;f32,3,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;f32,f32,ray_tracer::math::vector::impl$0::normalize::closure_env$0&gt;,core::ops::try_trait::NeverShortCircuit (12 samples, 0.25%)</title><rect x="93.2346%" y="341" width="0.2468%" height="15" fill="rgb(243,84,45)" fg:x="4534" fg:w="12"/><text x="93.4846%" y="351.50"></text></g><g><title>ray_tracer`ray_tracer::rendering::object::Object::normal_at (226 samples, 4.65%)</title><rect x="91.9391%" y="357" width="4.6473%" height="15" fill="rgb(252,49,23)" fg:x="4471" fg:w="226"/><text x="92.1891%" y="367.50">ray_t..</text></g><g><title>ray_tracer`ray_tracer::math::matrix::Matrix4x4::inverse (151 samples, 3.11%)</title><rect x="93.4814%" y="341" width="3.1051%" height="15" fill="rgb(215,19,7)" fg:x="4546" fg:w="151"/><text x="93.7314%" y="351.50">ray..</text></g><g><title>ray_tracer`ray_tracer::rendering::ray::Ray::intersection (155 samples, 3.19%)</title><rect x="96.5865%" y="357" width="3.1873%" height="15" fill="rgb(238,81,41)" fg:x="4697" fg:w="155"/><text x="96.8365%" y="367.50">ray..</text></g><g><title>ray_tracer`ray_tracer::math::matrix::Matrix4x4::inverse (78 samples, 1.60%)</title><rect x="98.1699%" y="341" width="1.6039%" height="15" fill="rgb(210,199,37)" fg:x="4774" fg:w="78"/><text x="98.4199%" y="351.50"></text></g><g><title>ray_tracer`std::sys::windows::fs::File::open (4 samples, 0.08%)</title><rect x="99.7738%" y="357" width="0.0823%" height="15" fill="rgb(244,192,49)" fg:x="4852" fg:w="4"/><text x="100.0238%" y="367.50"></text></g><g><title>KernelBase`CreateFileW (3 samples, 0.06%)</title><rect x="99.7944%" y="341" width="0.0617%" height="15" fill="rgb(226,211,11)" fg:x="4853" fg:w="3"/><text x="100.0444%" y="351.50"></text></g><g><title>KernelBase`CreateFileW (3 samples, 0.06%)</title><rect x="99.7944%" y="325" width="0.0617%" height="15" fill="rgb(236,162,54)" fg:x="4853" fg:w="3"/><text x="100.0444%" y="335.50"></text></g><g><title>ntdll`NtCreateFile (3 samples, 0.06%)</title><rect x="99.7944%" y="309" width="0.0617%" height="15" fill="rgb(220,229,9)" fg:x="4853" fg:w="3"/><text x="100.0444%" y="319.50"></text></g><g><title>ray_tracer`core::ops::function::FnOnce::call_once&lt;std::rt::lang_start::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$ (4,816 samples, 99.03%)</title><rect x="0.8431%" y="421" width="99.0335%" height="15" fill="rgb(250,87,22)" fg:x="41" fg:w="4816"/><text x="1.0931%" y="431.50">ray_tracer`core::ops::function::FnOnce::call_once&lt;std::rt::lang_start::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$</text></g><g><title>ray_tracer`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$ (4,816 samples, 99.03%)</title><rect x="0.8431%" y="405" width="99.0335%" height="15" fill="rgb(239,43,17)" fg:x="41" fg:w="4816"/><text x="1.0931%" y="415.50">ray_tracer`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$</text></g><g><title>ray_tracer`ray_tracer::main (4,816 samples, 99.03%)</title><rect x="0.8431%" y="389" width="99.0335%" height="15" fill="rgb(231,177,25)" fg:x="41" fg:w="4816"/><text x="1.0931%" y="399.50">ray_tracer`ray_tracer::main</text></g><g><title>ray_tracer`ray_tracer::checkpoints::shaded_circle::run (4,816 samples, 99.03%)</title><rect x="0.8431%" y="373" width="99.0335%" height="15" fill="rgb(219,179,1)" fg:x="41" fg:w="4816"/><text x="1.0931%" y="383.50">ray_tracer`ray_tracer::checkpoints::shaded_circle::run</text></g><g><title>ray_tracer`std::sys::windows::handle::Handle::write (1 samples, 0.02%)</title><rect x="99.8561%" y="357" width="0.0206%" height="15" fill="rgb(238,219,53)" fg:x="4856" fg:w="1"/><text x="100.1061%" y="367.50"></text></g><g><title>ray_tracer`std::sys::windows::handle::Handle::synchronous_write (1 samples, 0.02%)</title><rect x="99.8561%" y="341" width="0.0206%" height="15" fill="rgb(232,167,36)" fg:x="4856" fg:w="1"/><text x="100.1061%" y="351.50"></text></g><g><title>ntdll`NtWriteFile (1 samples, 0.02%)</title><rect x="99.8561%" y="325" width="0.0206%" height="15" fill="rgb(244,19,51)" fg:x="4856" fg:w="1"/><text x="100.1061%" y="335.50"></text></g><g><title>ray_tracer`main (4,817 samples, 99.05%)</title><rect x="0.8431%" y="453" width="99.0541%" height="15" fill="rgb(224,6,22)" fg:x="41" fg:w="4817"/><text x="1.0931%" y="463.50">ray_tracer`main</text></g><g><title>ray_tracer`std::rt::lang_start_internal (4,817 samples, 99.05%)</title><rect x="0.8431%" y="437" width="99.0541%" height="15" fill="rgb(224,145,5)" fg:x="41" fg:w="4817"/><text x="1.0931%" y="447.50">ray_tracer`std::rt::lang_start_internal</text></g><g><title>ray_tracer`std::sys_common::thread_info::set (1 samples, 0.02%)</title><rect x="99.8766%" y="421" width="0.0206%" height="15" fill="rgb(234,130,49)" fg:x="4857" fg:w="1"/><text x="100.1266%" y="431.50"></text></g><g><title>ray_tracer`std::sys::windows::thread_local_dtor::register_dtor (1 samples, 0.02%)</title><rect x="99.8766%" y="405" width="0.0206%" height="15" fill="rgb(254,6,2)" fg:x="4857" fg:w="1"/><text x="100.1266%" y="415.50"></text></g><g><title>ray_tracer`alloc::raw_vec::RawVec::reserve_for_push&lt;tuple$&lt;ptr_mut$&lt;u8&gt;,void (*)(ptr_mut$ (1 samples, 0.02%)</title><rect x="99.8766%" y="389" width="0.0206%" height="15" fill="rgb(208,96,46)" fg:x="4857" fg:w="1"/><text x="100.1266%" y="399.50"></text></g><g><title>ray_tracer`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="99.8766%" y="373" width="0.0206%" height="15" fill="rgb(239,3,39)" fg:x="4857" fg:w="1"/><text x="100.1266%" y="383.50"></text></g><g><title>kernel32`ExitProcess (1 samples, 0.02%)</title><rect x="99.8972%" y="421" width="0.0206%" height="15" fill="rgb(233,210,1)" fg:x="4858" fg:w="1"/><text x="100.1472%" y="431.50"></text></g><g><title>ntdll`RtlExitUserProcess (1 samples, 0.02%)</title><rect x="99.8972%" y="405" width="0.0206%" height="15" fill="rgb(244,137,37)" fg:x="4858" fg:w="1"/><text x="100.1472%" y="415.50"></text></g><g><title>ntdll`LdrShutdownProcess (1 samples, 0.02%)</title><rect x="99.8972%" y="389" width="0.0206%" height="15" fill="rgb(240,136,2)" fg:x="4858" fg:w="1"/><text x="100.1472%" y="399.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (1 samples, 0.02%)</title><rect x="99.8972%" y="373" width="0.0206%" height="15" fill="rgb(239,18,37)" fg:x="4858" fg:w="1"/><text x="100.1472%" y="383.50"></text></g><g><title>kernel32`BaseThreadInitThunk (1 samples, 0.02%)</title><rect x="99.8972%" y="357" width="0.0206%" height="15" fill="rgb(218,185,22)" fg:x="4858" fg:w="1"/><text x="100.1472%" y="367.50"></text></g><g><title>kernel32`BaseThreadInitThunk (1 samples, 0.02%)</title><rect x="99.8972%" y="341" width="0.0206%" height="15" fill="rgb(225,218,4)" fg:x="4858" fg:w="1"/><text x="100.1472%" y="351.50"></text></g><g><title>ntdll`EtwNotificationUnregister (1 samples, 0.02%)</title><rect x="99.8972%" y="325" width="0.0206%" height="15" fill="rgb(230,182,32)" fg:x="4858" fg:w="1"/><text x="100.1472%" y="335.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.02%)</title><rect x="99.8972%" y="309" width="0.0206%" height="15" fill="rgb(242,56,43)" fg:x="4858" fg:w="1"/><text x="100.1472%" y="319.50"></text></g><g><title>ntdll`RtlRbRemoveNode (1 samples, 0.02%)</title><rect x="99.8972%" y="293" width="0.0206%" height="15" fill="rgb(233,99,24)" fg:x="4858" fg:w="1"/><text x="100.1472%" y="303.50"></text></g><g><title>ntdll`LdrLoadDll (1 samples, 0.02%)</title><rect x="99.9177%" y="293" width="0.0206%" height="15" fill="rgb(234,209,42)" fg:x="4859" fg:w="1"/><text x="100.1677%" y="303.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.02%)</title><rect x="99.9177%" y="277" width="0.0206%" height="15" fill="rgb(227,7,12)" fg:x="4859" fg:w="1"/><text x="100.1677%" y="287.50"></text></g><g><title>ntdll`NtQueryAttributesFile (1 samples, 0.02%)</title><rect x="99.9177%" y="261" width="0.0206%" height="15" fill="rgb(245,203,43)" fg:x="4859" fg:w="1"/><text x="100.1677%" y="271.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.02%)</title><rect x="99.9383%" y="261" width="0.0206%" height="15" fill="rgb(238,205,33)" fg:x="4860" fg:w="1"/><text x="100.1883%" y="271.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.02%)</title><rect x="99.9383%" y="245" width="0.0206%" height="15" fill="rgb(231,56,7)" fg:x="4860" fg:w="1"/><text x="100.1883%" y="255.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 0.02%)</title><rect x="99.9383%" y="229" width="0.0206%" height="15" fill="rgb(244,186,29)" fg:x="4860" fg:w="1"/><text x="100.1883%" y="239.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (2 samples, 0.04%)</title><rect x="99.9383%" y="277" width="0.0411%" height="15" fill="rgb(234,111,31)" fg:x="4860" fg:w="2"/><text x="100.1883%" y="287.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (1 samples, 0.02%)</title><rect x="99.9589%" y="261" width="0.0206%" height="15" fill="rgb(241,149,10)" fg:x="4861" fg:w="1"/><text x="100.2089%" y="271.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (1 samples, 0.02%)</title><rect x="99.9589%" y="245" width="0.0206%" height="15" fill="rgb(249,206,44)" fg:x="4861" fg:w="1"/><text x="100.2089%" y="255.50"></text></g><g><title>all (4,863 samples, 100%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(251,153,30)" fg:x="0" fg:w="4863"/><text x="0.2500%" y="527.50"></text></g><g><title>ntdll`RtlUserThreadStart (4,837 samples, 99.47%)</title><rect x="0.5346%" y="501" width="99.4654%" height="15" fill="rgb(239,152,38)" fg:x="26" fg:w="4837"/><text x="0.7846%" y="511.50">ntdll`RtlUserThreadStart</text></g><g><title>kernel32`BaseThreadInitThunk (4,836 samples, 99.44%)</title><rect x="0.5552%" y="485" width="99.4448%" height="15" fill="rgb(249,139,47)" fg:x="27" fg:w="4836"/><text x="0.8052%" y="495.50">kernel32`BaseThreadInitThunk</text></g><g><title>ray_tracer`__scrt_common_main_seh (4,823 samples, 99.18%)</title><rect x="0.8225%" y="469" width="99.1775%" height="15" fill="rgb(244,64,35)" fg:x="40" fg:w="4823"/><text x="1.0725%" y="479.50">ray_tracer`__scrt_common_main_seh</text></g><g><title>ucrtbase`exit (5 samples, 0.10%)</title><rect x="99.8972%" y="453" width="0.1028%" height="15" fill="rgb(216,46,15)" fg:x="4858" fg:w="5"/><text x="100.1472%" y="463.50"></text></g><g><title>ucrtbase`exit (5 samples, 0.10%)</title><rect x="99.8972%" y="437" width="0.1028%" height="15" fill="rgb(250,74,19)" fg:x="4858" fg:w="5"/><text x="100.1472%" y="447.50"></text></g><g><title>ucrtbase`mbsicmp_l (4 samples, 0.08%)</title><rect x="99.9177%" y="421" width="0.0823%" height="15" fill="rgb(249,42,33)" fg:x="4859" fg:w="4"/><text x="100.1677%" y="431.50"></text></g><g><title>ucrtbase`o_iswascii (4 samples, 0.08%)</title><rect x="99.9177%" y="405" width="0.0823%" height="15" fill="rgb(242,149,17)" fg:x="4859" fg:w="4"/><text x="100.1677%" y="415.50"></text></g><g><title>KernelBase`LoadLibraryExW (4 samples, 0.08%)</title><rect x="99.9177%" y="389" width="0.0823%" height="15" fill="rgb(244,29,21)" fg:x="4859" fg:w="4"/><text x="100.1677%" y="399.50"></text></g><g><title>ntdll`LdrLoadDll (4 samples, 0.08%)</title><rect x="99.9177%" y="373" width="0.0823%" height="15" fill="rgb(220,130,37)" fg:x="4859" fg:w="4"/><text x="100.1677%" y="383.50"></text></g><g><title>ntdll`RtlUnicodeToCustomCPN (4 samples, 0.08%)</title><rect x="99.9177%" y="357" width="0.0823%" height="15" fill="rgb(211,67,2)" fg:x="4859" fg:w="4"/><text x="100.1677%" y="367.50"></text></g><g><title>ntdll`RtlImageRvaToSection (4 samples, 0.08%)</title><rect x="99.9177%" y="341" width="0.0823%" height="15" fill="rgb(235,68,52)" fg:x="4859" fg:w="4"/><text x="100.1677%" y="351.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (4 samples, 0.08%)</title><rect x="99.9177%" y="325" width="0.0823%" height="15" fill="rgb(246,142,3)" fg:x="4859" fg:w="4"/><text x="100.1677%" y="335.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (4 samples, 0.08%)</title><rect x="99.9177%" y="309" width="0.0823%" height="15" fill="rgb(241,25,7)" fg:x="4859" fg:w="4"/><text x="100.1677%" y="319.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (3 samples, 0.06%)</title><rect x="99.9383%" y="293" width="0.0617%" height="15" fill="rgb(242,119,39)" fg:x="4860" fg:w="3"/><text x="100.1883%" y="303.50"></text></g><g><title>ntdll`NtClose (1 samples, 0.02%)</title><rect x="99.9794%" y="277" width="0.0206%" height="15" fill="rgb(241,98,45)" fg:x="4862" fg:w="1"/><text x="100.2294%" y="287.50"></text></g></svg></svg>